/*
 * generated by Xtext 2.10.0
 */
grammar InternalFPML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package it.unibo.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.unibo.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import it.unibo.services.FPMLGrammarAccess;

}
@parser::members {
	private FPMLGrammarAccess grammarAccess;

	public void setGrammarAccess(FPMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePureBlock
entryRulePureBlock
:
{ before(grammarAccess.getPureBlockRule()); }
	 rulePureBlock
{ after(grammarAccess.getPureBlockRule()); } 
	 EOF 
;

// Rule PureBlock
rulePureBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPureBlockAccess().getGroup()); }
		(rule__PureBlock__Group__0)
		{ after(grammarAccess.getPureBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePureFunctionBlock
entryRulePureFunctionBlock
:
{ before(grammarAccess.getPureFunctionBlockRule()); }
	 rulePureFunctionBlock
{ after(grammarAccess.getPureFunctionBlockRule()); } 
	 EOF 
;

// Rule PureFunctionBlock
rulePureFunctionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPureFunctionBlockAccess().getGroup()); }
		(rule__PureFunctionBlock__Group__0)
		{ after(grammarAccess.getPureFunctionBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataBlock
entryRuleDataBlock
:
{ before(grammarAccess.getDataBlockRule()); }
	 ruleDataBlock
{ after(grammarAccess.getDataBlockRule()); } 
	 EOF 
;

// Rule DataBlock
ruleDataBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataBlockAccess().getGroup()); }
		(rule__DataBlock__Group__0)
		{ after(grammarAccess.getDataBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffectFullBlock
entryRuleEffectFullBlock
:
{ before(grammarAccess.getEffectFullBlockRule()); }
	 ruleEffectFullBlock
{ after(grammarAccess.getEffectFullBlockRule()); } 
	 EOF 
;

// Rule EffectFullBlock
ruleEffectFullBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectFullBlockAccess().getGroup()); }
		(rule__EffectFullBlock__Group__0)
		{ after(grammarAccess.getEffectFullBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleData
entryRuleData
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccess().getGroup()); }
		(rule__Data__Group__0)
		{ after(grammarAccess.getDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdt
entryRuleAdt
:
{ before(grammarAccess.getAdtRule()); }
	 ruleAdt
{ after(grammarAccess.getAdtRule()); } 
	 EOF 
;

// Rule Adt
ruleAdt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdtAccess().getAlternatives()); }
		(rule__Adt__Alternatives)
		{ after(grammarAccess.getAdtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSumType
entryRuleSumType
:
{ before(grammarAccess.getSumTypeRule()); }
	 ruleSumType
{ after(grammarAccess.getSumTypeRule()); } 
	 EOF 
;

// Rule SumType
ruleSumType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumTypeAccess().getGroup()); }
		(rule__SumType__Group__0)
		{ after(grammarAccess.getSumTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProdType
entryRuleProdType
:
{ before(grammarAccess.getProdTypeRule()); }
	 ruleProdType
{ after(grammarAccess.getProdTypeRule()); } 
	 EOF 
;

// Rule ProdType
ruleProdType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProdTypeAccess().getGroup()); }
		(rule__ProdType__Group__0)
		{ after(grammarAccess.getProdTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePureFunction
entryRulePureFunction
:
{ before(grammarAccess.getPureFunctionRule()); }
	 rulePureFunction
{ after(grammarAccess.getPureFunctionRule()); } 
	 EOF 
;

// Rule PureFunction
rulePureFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPureFunctionAccess().getGroup()); }
		(rule__PureFunction__Group__0)
		{ after(grammarAccess.getPureFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffectFullFunction
entryRuleEffectFullFunction
:
{ before(grammarAccess.getEffectFullFunctionRule()); }
	 ruleEffectFullFunction
{ after(grammarAccess.getEffectFullFunctionRule()); } 
	 EOF 
;

// Rule EffectFullFunction
ruleEffectFullFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectFullFunctionAccess().getGroup()); }
		(rule__EffectFullFunction__Group__0)
		{ after(grammarAccess.getEffectFullFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainFunc
entryRuleMainFunc
:
{ before(grammarAccess.getMainFuncRule()); }
	 ruleMainFunc
{ after(grammarAccess.getMainFuncRule()); } 
	 EOF 
;

// Rule MainFunc
ruleMainFunc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainFuncAccess().getGroup()); }
		(rule__MainFunc__Group__0)
		{ after(grammarAccess.getMainFuncAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getAlternatives()); }
		(rule__Function__Alternatives)
		{ after(grammarAccess.getFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffectFullArgument
entryRuleEffectFullArgument
:
{ before(grammarAccess.getEffectFullArgumentRule()); }
	 ruleEffectFullArgument
{ after(grammarAccess.getEffectFullArgumentRule()); } 
	 EOF 
;

// Rule EffectFullArgument
ruleEffectFullArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectFullArgumentAccess().getGroup()); }
		(rule__EffectFullArgument__Group__0)
		{ after(grammarAccess.getEffectFullArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getGroup()); }
		(rule__Argument__Group__0)
		{ after(grammarAccess.getArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBodyPure
entryRuleFunctionBodyPure
:
{ before(grammarAccess.getFunctionBodyPureRule()); }
	 ruleFunctionBodyPure
{ after(grammarAccess.getFunctionBodyPureRule()); } 
	 EOF 
;

// Rule FunctionBodyPure
ruleFunctionBodyPure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyPureAccess().getAlternatives()); }
		(rule__FunctionBodyPure__Alternatives)
		{ after(grammarAccess.getFunctionBodyPureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBodyEffectFull
entryRuleFunctionBodyEffectFull
:
{ before(grammarAccess.getFunctionBodyEffectFullRule()); }
	 ruleFunctionBodyEffectFull
{ after(grammarAccess.getFunctionBodyEffectFullRule()); } 
	 EOF 
;

// Rule FunctionBodyEffectFull
ruleFunctionBodyEffectFull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyEffectFullAccess().getAlternatives()); }
		(rule__FunctionBodyEffectFull__Alternatives)
		{ after(grammarAccess.getFunctionBodyEffectFullAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyFunctionBody
entryRuleEmptyFunctionBody
:
{ before(grammarAccess.getEmptyFunctionBodyRule()); }
	 ruleEmptyFunctionBody
{ after(grammarAccess.getEmptyFunctionBodyRule()); } 
	 EOF 
;

// Rule EmptyFunctionBody
ruleEmptyFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyFunctionBodyAccess().getGroup()); }
		(rule__EmptyFunctionBody__Group__0)
		{ after(grammarAccess.getEmptyFunctionBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionFunctionBodyPure
entryRuleCompositionFunctionBodyPure
:
{ before(grammarAccess.getCompositionFunctionBodyPureRule()); }
	 ruleCompositionFunctionBodyPure
{ after(grammarAccess.getCompositionFunctionBodyPureRule()); } 
	 EOF 
;

// Rule CompositionFunctionBodyPure
ruleCompositionFunctionBodyPure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup()); }
		(rule__CompositionFunctionBodyPure__Group__0)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionFunctionBodyEffect
entryRuleCompositionFunctionBodyEffect
:
{ before(grammarAccess.getCompositionFunctionBodyEffectRule()); }
	 ruleCompositionFunctionBodyEffect
{ after(grammarAccess.getCompositionFunctionBodyEffectRule()); } 
	 EOF 
;

// Rule CompositionFunctionBodyEffect
ruleCompositionFunctionBodyEffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup()); }
		(rule__CompositionFunctionBodyEffect__Group__0)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIOType
entryRuleIOType
:
{ before(grammarAccess.getIOTypeRule()); }
	 ruleIOType
{ after(grammarAccess.getIOTypeRule()); } 
	 EOF 
;

// Rule IOType
ruleIOType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIOTypeAccess().getGroup()); }
		(rule__IOType__Group__0)
		{ after(grammarAccess.getIOTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueType
entryRuleValueType
:
{ before(grammarAccess.getValueTypeRule()); }
	 ruleValueType
{ after(grammarAccess.getValueTypeRule()); } 
	 EOF 
;

// Rule ValueType
ruleValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
		(rule__ValueType__Alternatives)
		{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerType
entryRuleIntegerType
:
{ before(grammarAccess.getIntegerTypeRule()); }
	 ruleIntegerType
{ after(grammarAccess.getIntegerTypeRule()); } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerTypeAccess().getGroup()); }
		(rule__IntegerType__Group__0)
		{ after(grammarAccess.getIntegerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringType
entryRuleStringType
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTypeAccess().getGroup()); }
		(rule__StringType__Group__0)
		{ after(grammarAccess.getStringTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitType
entryRuleUnitType
:
{ before(grammarAccess.getUnitTypeRule()); }
	 ruleUnitType
{ after(grammarAccess.getUnitTypeRule()); } 
	 EOF 
;

// Rule UnitType
ruleUnitType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitTypeAccess().getGroup()); }
		(rule__UnitType__Group__0)
		{ after(grammarAccess.getUnitTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getIntValueAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitValue
entryRuleUnitValue
:
{ before(grammarAccess.getUnitValueRule()); }
	 ruleUnitValue
{ after(grammarAccess.getUnitValueRule()); } 
	 EOF 
;

// Rule UnitValue
ruleUnitValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitValueAccess().getLeftParenthesisRightParenthesisKeyword()); }
		'()'
		{ after(grammarAccess.getUnitValueAccess().getLeftParenthesisRightParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdtAccess().getArgumentParserRuleCall_0()); }
		ruleArgument
		{ after(grammarAccess.getAdtAccess().getArgumentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdtAccess().getValueParserRuleCall_1()); }
		ruleValue
		{ after(grammarAccess.getAdtAccess().getValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdtAccess().getSumTypeParserRuleCall_2()); }
		ruleSumType
		{ after(grammarAccess.getAdtAccess().getSumTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdtAccess().getProdTypeParserRuleCall_3()); }
		ruleProdType
		{ after(grammarAccess.getAdtAccess().getProdTypeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__SumAdtElementsAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumTypeAccess().getSumAdtElementsValueTypeParserRuleCall_1_0_0()); }
		ruleValueType
		{ after(grammarAccess.getSumTypeAccess().getSumAdtElementsValueTypeParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSumTypeAccess().getSumAdtElementsValueParserRuleCall_1_0_1()); }
		ruleValue
		{ after(grammarAccess.getSumTypeAccess().getSumAdtElementsValueParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__SumAdtElementsAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumTypeAccess().getSumAdtElementsValueTypeParserRuleCall_2_1_0_0()); }
		ruleValueType
		{ after(grammarAccess.getSumTypeAccess().getSumAdtElementsValueTypeParserRuleCall_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSumTypeAccess().getSumAdtElementsValueParserRuleCall_2_1_0_1()); }
		ruleValue
		{ after(grammarAccess.getSumTypeAccess().getSumAdtElementsValueParserRuleCall_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__ProdAdtElementsAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdTypeAccess().getProdAdtElementsValueTypeParserRuleCall_1_0_0()); }
		ruleValueType
		{ after(grammarAccess.getProdTypeAccess().getProdAdtElementsValueTypeParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProdTypeAccess().getProdAdtElementsValueParserRuleCall_1_0_1()); }
		ruleValue
		{ after(grammarAccess.getProdTypeAccess().getProdAdtElementsValueParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__ProdAdtElementsAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdTypeAccess().getProdAdtElementsValueTypeParserRuleCall_2_1_0_0()); }
		ruleValueType
		{ after(grammarAccess.getProdTypeAccess().getProdAdtElementsValueTypeParserRuleCall_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProdTypeAccess().getProdAdtElementsValueParserRuleCall_2_1_0_1()); }
		ruleValue
		{ after(grammarAccess.getProdTypeAccess().getProdAdtElementsValueParserRuleCall_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getPureFunctionParserRuleCall_0()); }
		rulePureFunction
		{ after(grammarAccess.getFunctionAccess().getPureFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getEffectFullFunctionParserRuleCall_1()); }
		ruleEffectFullFunction
		{ after(grammarAccess.getFunctionAccess().getEffectFullFunctionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBodyPure__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyPureAccess().getEmptyFunctionBodyParserRuleCall_0()); }
		ruleEmptyFunctionBody
		{ after(grammarAccess.getFunctionBodyPureAccess().getEmptyFunctionBodyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyPureAccess().getCompositionFunctionBodyPureParserRuleCall_1()); }
		ruleCompositionFunctionBodyPure
		{ after(grammarAccess.getFunctionBodyPureAccess().getCompositionFunctionBodyPureParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBodyEffectFull__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyEffectFullAccess().getEmptyFunctionBodyParserRuleCall_0()); }
		ruleEmptyFunctionBody
		{ after(grammarAccess.getFunctionBodyEffectFullAccess().getEmptyFunctionBodyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyEffectFullAccess().getCompositionFunctionBodyEffectParserRuleCall_1()); }
		ruleCompositionFunctionBodyEffect
		{ after(grammarAccess.getFunctionBodyEffectFullAccess().getCompositionFunctionBodyEffectParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeAccess().getIntegerTypeParserRuleCall_0()); }
		ruleIntegerType
		{ after(grammarAccess.getValueTypeAccess().getIntegerTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getStringTypeParserRuleCall_1()); }
		ruleStringType
		{ after(grammarAccess.getValueTypeAccess().getStringTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getDataTypeParserRuleCall_2()); }
		ruleDataType
		{ after(grammarAccess.getValueTypeAccess().getDataTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getValueTypeParserRuleCall_0()); }
		ruleValueType
		{ after(grammarAccess.getTypeAccess().getValueTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getUnitTypeParserRuleCall_1()); }
		ruleUnitType
		{ after(grammarAccess.getTypeAccess().getUnitTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIntValueParserRuleCall_0()); }
		ruleIntValue
		{ after(grammarAccess.getValueAccess().getIntValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_1()); }
		ruleStringValue
		{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getUnitValueParserRuleCall_2()); }
		ruleUnitValue
		{ after(grammarAccess.getValueAccess().getUnitValueParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_0()); }
	(rule__Model__ElementsAssignment_0)
	{ after(grammarAccess.getModelAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_1()); }
	(rule__Model__ElementsAssignment_1)
	{ after(grammarAccess.getModelAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PureBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__0__Impl
	rule__PureBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getPureKeyword_0()); }
	'Pure'
	{ after(grammarAccess.getPureBlockAccess().getPureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__1__Impl
	rule__PureBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPureBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__2__Impl
	rule__PureBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getElementsAssignment_2()); }
	(rule__PureBlock__ElementsAssignment_2)
	{ after(grammarAccess.getPureBlockAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__3__Impl
	rule__PureBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getElementsAssignment_3()); }
	(rule__PureBlock__ElementsAssignment_3)
	{ after(grammarAccess.getPureBlockAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPureBlockAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PureFunctionBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionBlock__Group__0__Impl
	rule__PureFunctionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionBlockAccess().getFunctionsKeyword_0()); }
	'Functions'
	{ after(grammarAccess.getPureFunctionBlockAccess().getFunctionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionBlock__Group__1__Impl
	rule__PureFunctionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPureFunctionBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionBlock__Group__2__Impl
	rule__PureFunctionBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionBlockAccess().getFeaturesAssignment_2()); }
	(rule__PureFunctionBlock__FeaturesAssignment_2)*
	{ after(grammarAccess.getPureFunctionBlockAccess().getFeaturesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getPureFunctionBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__0__Impl
	rule__DataBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getDataKeyword_0()); }
	'Data'
	{ after(grammarAccess.getDataBlockAccess().getDataKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__1__Impl
	rule__DataBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDataBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__2__Impl
	rule__DataBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getElementsAssignment_2()); }
	(rule__DataBlock__ElementsAssignment_2)*
	{ after(grammarAccess.getDataBlockAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDataBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EffectFullBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__0__Impl
	rule__EffectFullBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getEffectsKeyword_0()); }
	'Effects'
	{ after(grammarAccess.getEffectFullBlockAccess().getEffectsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__1__Impl
	rule__EffectFullBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEffectFullBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__2__Impl
	rule__EffectFullBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getFeaturesAssignment_2()); }
	(rule__EffectFullBlock__FeaturesAssignment_2)*
	{ after(grammarAccess.getEffectFullBlockAccess().getFeaturesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__3__Impl
	rule__EffectFullBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getMainAssignment_3()); }
	(rule__EffectFullBlock__MainAssignment_3)
	{ after(grammarAccess.getEffectFullBlockAccess().getMainAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEffectFullBlockAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__0__Impl
	rule__Data__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getNameAssignment_0()); }
	(rule__Data__NameAssignment_0)
	{ after(grammarAccess.getDataAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__1__Impl
	rule__Data__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDataAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getContentAssignment_2()); }
	(rule__Data__ContentAssignment_2)
	{ after(grammarAccess.getDataAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumType__Group__0__Impl
	rule__SumType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumTypeAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getSumTypeAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumType__Group__1__Impl
	rule__SumType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumTypeAccess().getSumAdtElementsAssignment_1()); }
	(rule__SumType__SumAdtElementsAssignment_1)
	{ after(grammarAccess.getSumTypeAccess().getSumAdtElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumType__Group__2__Impl
	rule__SumType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSumTypeAccess().getGroup_2()); }
		(rule__SumType__Group_2__0)
		{ after(grammarAccess.getSumTypeAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getSumTypeAccess().getGroup_2()); }
		(rule__SumType__Group_2__0)*
		{ after(grammarAccess.getSumTypeAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSumTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumType__Group_2__0__Impl
	rule__SumType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumTypeAccess().getPlusSignKeyword_2_0()); }
	'+'
	{ after(grammarAccess.getSumTypeAccess().getPlusSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumTypeAccess().getSumAdtElementsAssignment_2_1()); }
	(rule__SumType__SumAdtElementsAssignment_2_1)
	{ after(grammarAccess.getSumTypeAccess().getSumAdtElementsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProdType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdType__Group__0__Impl
	rule__ProdType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdTypeAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getProdTypeAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdType__Group__1__Impl
	rule__ProdType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdTypeAccess().getProdAdtElementsAssignment_1()); }
	(rule__ProdType__ProdAdtElementsAssignment_1)
	{ after(grammarAccess.getProdTypeAccess().getProdAdtElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdType__Group__2__Impl
	rule__ProdType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProdTypeAccess().getGroup_2()); }
		(rule__ProdType__Group_2__0)
		{ after(grammarAccess.getProdTypeAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getProdTypeAccess().getGroup_2()); }
		(rule__ProdType__Group_2__0)*
		{ after(grammarAccess.getProdTypeAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getProdTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProdType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdType__Group_2__0__Impl
	rule__ProdType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdTypeAccess().getAsteriskKeyword_2_0()); }
	'*'
	{ after(grammarAccess.getProdTypeAccess().getAsteriskKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdTypeAccess().getProdAdtElementsAssignment_2_1()); }
	(rule__ProdType__ProdAdtElementsAssignment_2_1)
	{ after(grammarAccess.getProdTypeAccess().getProdAdtElementsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PureFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__0__Impl
	rule__PureFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getPureFunctionAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__1__Impl
	rule__PureFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getReturnTypeAssignment_1()); }
	(rule__PureFunction__ReturnTypeAssignment_1)
	{ after(grammarAccess.getPureFunctionAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__2__Impl
	rule__PureFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getNameAssignment_2()); }
	(rule__PureFunction__NameAssignment_2)
	{ after(grammarAccess.getPureFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__3__Impl
	rule__PureFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getPureFunctionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__4__Impl
	rule__PureFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getArgAssignment_4()); }
	(rule__PureFunction__ArgAssignment_4)
	{ after(grammarAccess.getPureFunctionAccess().getArgAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__5__Impl
	rule__PureFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getPureFunctionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__6__Impl
	rule__PureFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getPureFunctionAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__7__Impl
	rule__PureFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getPureFunctionAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__8__Impl
	rule__PureFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getFunctionBodyAssignment_8()); }
	(rule__PureFunction__FunctionBodyAssignment_8)
	{ after(grammarAccess.getPureFunctionAccess().getFunctionBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunction__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getPureFunctionAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EffectFullFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__0__Impl
	rule__EffectFullFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getEffectFullFunctionAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__1__Impl
	rule__EffectFullFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getReturnTypeAssignment_1()); }
	(rule__EffectFullFunction__ReturnTypeAssignment_1)
	{ after(grammarAccess.getEffectFullFunctionAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__2__Impl
	rule__EffectFullFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getNameAssignment_2()); }
	(rule__EffectFullFunction__NameAssignment_2)
	{ after(grammarAccess.getEffectFullFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__3__Impl
	rule__EffectFullFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getEffectFullFunctionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__4__Impl
	rule__EffectFullFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getArgAssignment_4()); }
	(rule__EffectFullFunction__ArgAssignment_4)
	{ after(grammarAccess.getEffectFullFunctionAccess().getArgAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__5__Impl
	rule__EffectFullFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getEffectFullFunctionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__6__Impl
	rule__EffectFullFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getEffectFullFunctionAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__7__Impl
	rule__EffectFullFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getEffectFullFunctionAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__8__Impl
	rule__EffectFullFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getFunctionBodyAssignment_8()); }
	(rule__EffectFullFunction__FunctionBodyAssignment_8)
	{ after(grammarAccess.getEffectFullFunctionAccess().getFunctionBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunction__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getEffectFullFunctionAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__0__Impl
	rule__MainFunc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getIOKeyword_0()); }
	'IO'
	{ after(grammarAccess.getMainFuncAccess().getIOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__1__Impl
	rule__MainFunc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getReturnTypeAssignment_1()); }
	(rule__MainFunc__ReturnTypeAssignment_1)
	{ after(grammarAccess.getMainFuncAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__2__Impl
	rule__MainFunc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getMainKeyword_2()); }
	'main'
	{ after(grammarAccess.getMainFuncAccess().getMainKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__3__Impl
	rule__MainFunc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getMainFuncAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__4__Impl
	rule__MainFunc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getMainFuncAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__5__Impl
	rule__MainFunc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getFunctionBodyAssignment_5()); }
	(rule__MainFunc__FunctionBodyAssignment_5)
	{ after(grammarAccess.getMainFuncAccess().getFunctionBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getMainFuncAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EffectFullArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullArgument__Group__0__Impl
	rule__EffectFullArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullArgumentAccess().getTypeAssignment_0()); }
	(rule__EffectFullArgument__TypeAssignment_0)
	{ after(grammarAccess.getEffectFullArgumentAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullArgumentAccess().getNameAssignment_1()); }
	(rule__EffectFullArgument__NameAssignment_1)?
	{ after(grammarAccess.getEffectFullArgumentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getTypeAssignment_0()); }
	(rule__Argument__TypeAssignment_0)
	{ after(grammarAccess.getArgumentAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
	(rule__Argument__NameAssignment_1)
	{ after(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyFunctionBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyFunctionBody__Group__0__Impl
	rule__EmptyFunctionBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyFunctionBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyFunctionBodyAccess().getEmptyFunctionBodyAction_0()); }
	()
	{ after(grammarAccess.getEmptyFunctionBodyAccess().getEmptyFunctionBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyFunctionBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyFunctionBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyFunctionBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyFunctionBodyAccess().getUndefinedKeyword_1()); }
	'Undefined'
	{ after(grammarAccess.getEmptyFunctionBodyAccess().getUndefinedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyPure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group__0__Impl
	rule__CompositionFunctionBodyPure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup_0()); }
	(rule__CompositionFunctionBodyPure__Group_0__0)
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup_1()); }
	(rule__CompositionFunctionBodyPure__Group_1__0)*
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyPure__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_0__0__Impl
	rule__CompositionFunctionBodyPure__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_0_0()); }
	(rule__CompositionFunctionBodyPure__FunctionChainAssignment_0_0)
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_0__1__Impl
	rule__CompositionFunctionBodyPure__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getVerticalLineGreaterThanSignKeyword_0_1()); }
	'|>'
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getVerticalLineGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_0_2()); }
	(rule__CompositionFunctionBodyPure__FunctionChainAssignment_0_2)
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyPure__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_1__0__Impl
	rule__CompositionFunctionBodyPure__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getVerticalLineGreaterThanSignKeyword_1_0()); }
	'|>'
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getVerticalLineGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_1_1()); }
	(rule__CompositionFunctionBodyPure__FunctionChainAssignment_1_1)
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyEffect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group__0__Impl
	rule__CompositionFunctionBodyEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup_0()); }
	(rule__CompositionFunctionBodyEffect__Group_0__0)
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup_1()); }
	(rule__CompositionFunctionBodyEffect__Group_1__0)*
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyEffect__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_0__0__Impl
	rule__CompositionFunctionBodyEffect__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_0_0()); }
	(rule__CompositionFunctionBodyEffect__FunctionChainAssignment_0_0)
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_0__1__Impl
	rule__CompositionFunctionBodyEffect__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_0_1()); }
	'>>='
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_0_2()); }
	(rule__CompositionFunctionBodyEffect__FunctionChainAssignment_0_2)
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyEffect__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_1__0__Impl
	rule__CompositionFunctionBodyEffect__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_1_0()); }
	'>>='
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_1_1()); }
	(rule__CompositionFunctionBodyEffect__FunctionChainAssignment_1_1)
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IOType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IOType__Group__0__Impl
	rule__IOType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IOType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIOTypeAccess().getIOKeyword_0()); }
	'IO'
	{ after(grammarAccess.getIOTypeAccess().getIOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IOType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IOType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IOType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIOTypeAccess().getTypeAssignment_1()); }
	(rule__IOType__TypeAssignment_1)
	{ after(grammarAccess.getIOTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerType__Group__0__Impl
	rule__IntegerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0()); }
	()
	{ after(grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerTypeAccess().getTypeAssignment_1()); }
	(rule__IntegerType__TypeAssignment_1)
	{ after(grammarAccess.getIntegerTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringType__Group__0__Impl
	rule__StringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
	()
	{ after(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTypeAccess().getTypeAssignment_1()); }
	(rule__StringType__TypeAssignment_1)
	{ after(grammarAccess.getStringTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitType__Group__0__Impl
	rule__UnitType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTypeAccess().getUnitTypeAction_0()); }
	()
	{ after(grammarAccess.getUnitTypeAccess().getUnitTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTypeAccess().getTypeAssignment_1()); }
	(rule__UnitType__TypeAssignment_1)
	{ after(grammarAccess.getUnitTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDataTypeAction_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getDataTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
	rule__DataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getRefKeyword_1()); }
	'ref'
	{ after(grammarAccess.getDataTypeAccess().getRefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_2()); }
	(rule__DataType__TypeAssignment_2)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsPureBlockParserRuleCall_0_0()); }
		rulePureBlock
		{ after(grammarAccess.getModelAccess().getElementsPureBlockParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsEffectFullBlockParserRuleCall_1_0()); }
		ruleEffectFullBlock
		{ after(grammarAccess.getModelAccess().getElementsEffectFullBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureBlockAccess().getElementsPureFunctionBlockParserRuleCall_2_0()); }
		rulePureFunctionBlock
		{ after(grammarAccess.getPureBlockAccess().getElementsPureFunctionBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureBlockAccess().getElementsDataBlockParserRuleCall_3_0()); }
		ruleDataBlock
		{ after(grammarAccess.getPureBlockAccess().getElementsDataBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__FeaturesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionBlockAccess().getFeaturesPureFunctionParserRuleCall_2_0()); }
		rulePureFunction
		{ after(grammarAccess.getPureFunctionBlockAccess().getFeaturesPureFunctionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataBlockAccess().getElementsDataParserRuleCall_2_0()); }
		ruleData
		{ after(grammarAccess.getDataBlockAccess().getElementsDataParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__FeaturesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullBlockAccess().getFeaturesEffectFullFunctionParserRuleCall_2_0()); }
		ruleEffectFullFunction
		{ after(grammarAccess.getEffectFullBlockAccess().getFeaturesEffectFullFunctionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__MainAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullBlockAccess().getMainMainFuncParserRuleCall_3_0()); }
		ruleMainFunc
		{ after(grammarAccess.getEffectFullBlockAccess().getMainMainFuncParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDataAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getContentAdtParserRuleCall_2_0()); }
		ruleAdt
		{ after(grammarAccess.getDataAccess().getContentAdtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__SumAdtElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumTypeAccess().getSumAdtElementsAlternatives_1_0()); }
		(rule__SumType__SumAdtElementsAlternatives_1_0)
		{ after(grammarAccess.getSumTypeAccess().getSumAdtElementsAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__SumAdtElementsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumTypeAccess().getSumAdtElementsAlternatives_2_1_0()); }
		(rule__SumType__SumAdtElementsAlternatives_2_1_0)
		{ after(grammarAccess.getSumTypeAccess().getSumAdtElementsAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__ProdAdtElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdTypeAccess().getProdAdtElementsAlternatives_1_0()); }
		(rule__ProdType__ProdAdtElementsAlternatives_1_0)
		{ after(grammarAccess.getProdTypeAccess().getProdAdtElementsAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__ProdAdtElementsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdTypeAccess().getProdAdtElementsAlternatives_2_1_0()); }
		(rule__ProdType__ProdAdtElementsAlternatives_2_1_0)
		{ after(grammarAccess.getProdTypeAccess().getProdAdtElementsAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionAccess().getReturnTypeValueTypeParserRuleCall_1_0()); }
		ruleValueType
		{ after(grammarAccess.getPureFunctionAccess().getReturnTypeValueTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPureFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__ArgAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionAccess().getArgArgumentParserRuleCall_4_0()); }
		ruleArgument
		{ after(grammarAccess.getPureFunctionAccess().getArgArgumentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunction__FunctionBodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionAccess().getFunctionBodyFunctionBodyPureParserRuleCall_8_0()); }
		ruleFunctionBodyPure
		{ after(grammarAccess.getPureFunctionAccess().getFunctionBodyFunctionBodyPureParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionAccess().getReturnTypeIOTypeParserRuleCall_1_0()); }
		ruleIOType
		{ after(grammarAccess.getEffectFullFunctionAccess().getReturnTypeIOTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEffectFullFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__ArgAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionAccess().getArgEffectFullArgumentParserRuleCall_4_0()); }
		ruleEffectFullArgument
		{ after(grammarAccess.getEffectFullFunctionAccess().getArgEffectFullArgumentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunction__FunctionBodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_8_0()); }
		ruleFunctionBodyEffectFull
		{ after(grammarAccess.getEffectFullFunctionAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainFuncAccess().getReturnTypeUnitTypeParserRuleCall_1_0()); }
		ruleUnitType
		{ after(grammarAccess.getMainFuncAccess().getReturnTypeUnitTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__FunctionBodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainFuncAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_5_0()); }
		ruleFunctionBodyEffectFull
		{ after(grammarAccess.getMainFuncAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullArgumentAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getEffectFullArgumentAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEffectFullArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getTypeValueTypeParserRuleCall_0_0()); }
		ruleValueType
		{ after(grammarAccess.getArgumentAccess().getTypeValueTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__FunctionChainAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainInitialPureChainElementCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainInitialPureChainElementIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainInitialPureChainElementIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainInitialPureChainElementCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__FunctionChainAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainPureFunctionCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainPureFunctionIDTerminalRuleCall_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainPureFunctionIDTerminalRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainPureFunctionCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__FunctionChainAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainPureFunctionCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainPureFunctionIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainPureFunctionIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainPureFunctionCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__FunctionChainAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__FunctionChainAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementIDTerminalRuleCall_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementIDTerminalRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__FunctionChainAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainChainElementCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IOType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIOTypeAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getIOTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerTypeAccess().getTypeIntKeyword_1_0()); }
		(
			{ before(grammarAccess.getIntegerTypeAccess().getTypeIntKeyword_1_0()); }
			'int'
			{ after(grammarAccess.getIntegerTypeAccess().getTypeIntKeyword_1_0()); }
		)
		{ after(grammarAccess.getIntegerTypeAccess().getTypeIntKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTypeAccess().getTypeStringKeyword_1_0()); }
		(
			{ before(grammarAccess.getStringTypeAccess().getTypeStringKeyword_1_0()); }
			'String'
			{ after(grammarAccess.getStringTypeAccess().getTypeStringKeyword_1_0()); }
		)
		{ after(grammarAccess.getStringTypeAccess().getTypeStringKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTypeAccess().getTypeUnitKeyword_1_0()); }
		(
			{ before(grammarAccess.getUnitTypeAccess().getTypeUnitKeyword_1_0()); }
			'Unit'
			{ after(grammarAccess.getUnitTypeAccess().getTypeUnitKeyword_1_0()); }
		)
		{ after(grammarAccess.getUnitTypeAccess().getTypeUnitKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeDataCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeDataIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataTypeAccess().getTypeDataIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeDataCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
