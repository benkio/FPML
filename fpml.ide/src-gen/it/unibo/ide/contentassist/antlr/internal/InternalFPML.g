/*
 * generated by Xtext 2.10.0
 */
grammar InternalFPML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package it.unibo.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.unibo.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import it.unibo.services.FPMLGrammarAccess;

}
@parser::members {
	private FPMLGrammarAccess grammarAccess;

	public void setGrammarAccess(FPMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePureBlock
entryRulePureBlock
:
{ before(grammarAccess.getPureBlockRule()); }
	 rulePureBlock
{ after(grammarAccess.getPureBlockRule()); } 
	 EOF 
;

// Rule PureBlock
rulePureBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPureBlockAccess().getGroup()); }
		(rule__PureBlock__Group__0)
		{ after(grammarAccess.getPureBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePureFunctionBlock
entryRulePureFunctionBlock
:
{ before(grammarAccess.getPureFunctionBlockRule()); }
	 rulePureFunctionBlock
{ after(grammarAccess.getPureFunctionBlockRule()); } 
	 EOF 
;

// Rule PureFunctionBlock
rulePureFunctionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPureFunctionBlockAccess().getGroup()); }
		(rule__PureFunctionBlock__Group__0)
		{ after(grammarAccess.getPureFunctionBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataBlock
entryRuleDataBlock
:
{ before(grammarAccess.getDataBlockRule()); }
	 ruleDataBlock
{ after(grammarAccess.getDataBlockRule()); } 
	 EOF 
;

// Rule DataBlock
ruleDataBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataBlockAccess().getGroup()); }
		(rule__DataBlock__Group__0)
		{ after(grammarAccess.getDataBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueBlock
entryRuleValueBlock
:
{ before(grammarAccess.getValueBlockRule()); }
	 ruleValueBlock
{ after(grammarAccess.getValueBlockRule()); } 
	 EOF 
;

// Rule ValueBlock
ruleValueBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueBlockAccess().getGroup()); }
		(rule__ValueBlock__Group__0)
		{ after(grammarAccess.getValueBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffectFullBlock
entryRuleEffectFullBlock
:
{ before(grammarAccess.getEffectFullBlockRule()); }
	 ruleEffectFullBlock
{ after(grammarAccess.getEffectFullBlockRule()); } 
	 EOF 
;

// Rule EffectFullBlock
ruleEffectFullBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectFullBlockAccess().getGroup()); }
		(rule__EffectFullBlock__Group__0)
		{ after(grammarAccess.getEffectFullBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleData
entryRuleData
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccess().getGroup()); }
		(rule__Data__Group__0)
		{ after(grammarAccess.getDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getGroup()); }
		(rule__Value__Group__0)
		{ after(grammarAccess.getValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdtType
entryRuleAdtType
:
{ before(grammarAccess.getAdtTypeRule()); }
	 ruleAdtType
{ after(grammarAccess.getAdtTypeRule()); } 
	 EOF 
;

// Rule AdtType
ruleAdtType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdtTypeAccess().getAlternatives()); }
		(rule__AdtType__Alternatives)
		{ after(grammarAccess.getAdtTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSumType
entryRuleSumType
:
{ before(grammarAccess.getSumTypeRule()); }
	 ruleSumType
{ after(grammarAccess.getSumTypeRule()); } 
	 EOF 
;

// Rule SumType
ruleSumType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumTypeAccess().getGroup()); }
		(rule__SumType__Group__0)
		{ after(grammarAccess.getSumTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProdType
entryRuleProdType
:
{ before(grammarAccess.getProdTypeRule()); }
	 ruleProdType
{ after(grammarAccess.getProdTypeRule()); } 
	 EOF 
;

// Rule ProdType
ruleProdType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProdTypeAccess().getGroup()); }
		(rule__ProdType__Group__0)
		{ after(grammarAccess.getProdTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePureFunctionDefinition
entryRulePureFunctionDefinition
:
{ before(grammarAccess.getPureFunctionDefinitionRule()); }
	 rulePureFunctionDefinition
{ after(grammarAccess.getPureFunctionDefinitionRule()); } 
	 EOF 
;

// Rule PureFunctionDefinition
rulePureFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPureFunctionDefinitionAccess().getGroup()); }
		(rule__PureFunctionDefinition__Group__0)
		{ after(grammarAccess.getPureFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffectFullFunctionDefinition
entryRuleEffectFullFunctionDefinition
:
{ before(grammarAccess.getEffectFullFunctionDefinitionRule()); }
	 ruleEffectFullFunctionDefinition
{ after(grammarAccess.getEffectFullFunctionDefinitionRule()); } 
	 EOF 
;

// Rule EffectFullFunctionDefinition
ruleEffectFullFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getGroup()); }
		(rule__EffectFullFunctionDefinition__Group__0)
		{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainFunc
entryRuleMainFunc
:
{ before(grammarAccess.getMainFuncRule()); }
	 ruleMainFunc
{ after(grammarAccess.getMainFuncRule()); } 
	 EOF 
;

// Rule MainFunc
ruleMainFunc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainFuncAccess().getGroup()); }
		(rule__MainFunc__Group__0)
		{ after(grammarAccess.getMainFuncAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffectFullArgument
entryRuleEffectFullArgument
:
{ before(grammarAccess.getEffectFullArgumentRule()); }
	 ruleEffectFullArgument
{ after(grammarAccess.getEffectFullArgumentRule()); } 
	 EOF 
;

// Rule EffectFullArgument
ruleEffectFullArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectFullArgumentAccess().getGroup()); }
		(rule__EffectFullArgument__Group__0)
		{ after(grammarAccess.getEffectFullArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getGroup()); }
		(rule__Argument__Group__0)
		{ after(grammarAccess.getArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBodyPure
entryRuleFunctionBodyPure
:
{ before(grammarAccess.getFunctionBodyPureRule()); }
	 ruleFunctionBodyPure
{ after(grammarAccess.getFunctionBodyPureRule()); } 
	 EOF 
;

// Rule FunctionBodyPure
ruleFunctionBodyPure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyPureAccess().getAlternatives()); }
		(rule__FunctionBodyPure__Alternatives)
		{ after(grammarAccess.getFunctionBodyPureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBodyEffectFull
entryRuleFunctionBodyEffectFull
:
{ before(grammarAccess.getFunctionBodyEffectFullRule()); }
	 ruleFunctionBodyEffectFull
{ after(grammarAccess.getFunctionBodyEffectFullRule()); } 
	 EOF 
;

// Rule FunctionBodyEffectFull
ruleFunctionBodyEffectFull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyEffectFullAccess().getAlternatives()); }
		(rule__FunctionBodyEffectFull__Alternatives)
		{ after(grammarAccess.getFunctionBodyEffectFullAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyFunctionBody
entryRuleEmptyFunctionBody
:
{ before(grammarAccess.getEmptyFunctionBodyRule()); }
	 ruleEmptyFunctionBody
{ after(grammarAccess.getEmptyFunctionBodyRule()); } 
	 EOF 
;

// Rule EmptyFunctionBody
ruleEmptyFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyFunctionBodyAccess().getGroup()); }
		(rule__EmptyFunctionBody__Group__0)
		{ after(grammarAccess.getEmptyFunctionBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionFunctionBodyPure
entryRuleCompositionFunctionBodyPure
:
{ before(grammarAccess.getCompositionFunctionBodyPureRule()); }
	 ruleCompositionFunctionBodyPure
{ after(grammarAccess.getCompositionFunctionBodyPureRule()); } 
	 EOF 
;

// Rule CompositionFunctionBodyPure
ruleCompositionFunctionBodyPure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getAlternatives()); }
		(rule__CompositionFunctionBodyPure__Alternatives)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionFunctionBodyPureFactor
entryRuleCompositionFunctionBodyPureFactor
:
{ before(grammarAccess.getCompositionFunctionBodyPureFactorRule()); }
	 ruleCompositionFunctionBodyPureFactor
{ after(grammarAccess.getCompositionFunctionBodyPureFactorRule()); } 
	 EOF 
;

// Rule CompositionFunctionBodyPureFactor
ruleCompositionFunctionBodyPureFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getAlternatives()); }
		(rule__CompositionFunctionBodyPureFactor__Alternatives)
		{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionFunctionBodyEffect
entryRuleCompositionFunctionBodyEffect
:
{ before(grammarAccess.getCompositionFunctionBodyEffectRule()); }
	 ruleCompositionFunctionBodyEffect
{ after(grammarAccess.getCompositionFunctionBodyEffectRule()); } 
	 EOF 
;

// Rule CompositionFunctionBodyEffect
ruleCompositionFunctionBodyEffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getAlternatives()); }
		(rule__CompositionFunctionBodyEffect__Alternatives)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionFunctionBodyEffectFullFactor
entryRuleCompositionFunctionBodyEffectFullFactor
:
{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorRule()); }
	 ruleCompositionFunctionBodyEffectFullFactor
{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorRule()); } 
	 EOF 
;

// Rule CompositionFunctionBodyEffectFullFactor
ruleCompositionFunctionBodyEffectFullFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getAlternatives()); }
		(rule__CompositionFunctionBodyEffectFullFactor__Alternatives)
		{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnPureFunction
entryRuleReturnPureFunction
:
{ before(grammarAccess.getReturnPureFunctionRule()); }
	 ruleReturnPureFunction
{ after(grammarAccess.getReturnPureFunctionRule()); } 
	 EOF 
;

// Rule ReturnPureFunction
ruleReturnPureFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnPureFunctionAccess().getGroup()); }
		(rule__ReturnPureFunction__Group__0)
		{ after(grammarAccess.getReturnPureFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnEffectFullFunction
entryRuleReturnEffectFullFunction
:
{ before(grammarAccess.getReturnEffectFullFunctionRule()); }
	 ruleReturnEffectFullFunction
{ after(grammarAccess.getReturnEffectFullFunctionRule()); } 
	 EOF 
;

// Rule ReturnEffectFullFunction
ruleReturnEffectFullFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnEffectFullFunctionAccess().getGroup()); }
		(rule__ReturnEffectFullFunction__Group__0)
		{ after(grammarAccess.getReturnEffectFullFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIOType
entryRuleIOType
:
{ before(grammarAccess.getIOTypeRule()); }
	 ruleIOType
{ after(grammarAccess.getIOTypeRule()); } 
	 EOF 
;

// Rule IOType
ruleIOType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIOTypeAccess().getGroup()); }
		(rule__IOType__Group__0)
		{ after(grammarAccess.getIOTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueType
entryRuleValueType
:
{ before(grammarAccess.getValueTypeRule()); }
	 ruleValueType
{ after(grammarAccess.getValueTypeRule()); } 
	 EOF 
;

// Rule ValueType
ruleValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
		(rule__ValueType__Alternatives)
		{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerType
entryRuleIntegerType
:
{ before(grammarAccess.getIntegerTypeRule()); }
	 ruleIntegerType
{ after(grammarAccess.getIntegerTypeRule()); } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerTypeAccess().getGroup()); }
		(rule__IntegerType__Group__0)
		{ after(grammarAccess.getIntegerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringType
entryRuleStringType
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTypeAccess().getGroup()); }
		(rule__StringType__Group__0)
		{ after(grammarAccess.getStringTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitType
entryRuleUnitType
:
{ before(grammarAccess.getUnitTypeRule()); }
	 ruleUnitType
{ after(grammarAccess.getUnitTypeRule()); } 
	 EOF 
;

// Rule UnitType
ruleUnitType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitTypeAccess().getGroup()); }
		(rule__UnitType__Group__0)
		{ after(grammarAccess.getUnitTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePureFunctionType
entryRulePureFunctionType
:
{ before(grammarAccess.getPureFunctionTypeRule()); }
	 rulePureFunctionType
{ after(grammarAccess.getPureFunctionTypeRule()); } 
	 EOF 
;

// Rule PureFunctionType
rulePureFunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPureFunctionTypeAccess().getGroup()); }
		(rule__PureFunctionType__Group__0)
		{ after(grammarAccess.getPureFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffectFullFunctionType
entryRuleEffectFullFunctionType
:
{ before(grammarAccess.getEffectFullFunctionTypeRule()); }
	 ruleEffectFullFunctionType
{ after(grammarAccess.getEffectFullFunctionTypeRule()); } 
	 EOF 
;

// Rule EffectFullFunctionType
ruleEffectFullFunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectFullFunctionTypeAccess().getGroup()); }
		(rule__EffectFullFunctionType__Group__0)
		{ after(grammarAccess.getEffectFullFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getGroup()); }
		(rule__IntValue__Group__0)
		{ after(grammarAccess.getIntValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getGroup()); }
		(rule__StringValue__Group__0)
		{ after(grammarAccess.getStringValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitValue
entryRuleUnitValue
:
{ before(grammarAccess.getUnitValueRule()); }
	 ruleUnitValue
{ after(grammarAccess.getUnitValueRule()); } 
	 EOF 
;

// Rule UnitValue
ruleUnitValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitValueAccess().getGroup()); }
		(rule__UnitValue__Group__0)
		{ after(grammarAccess.getUnitValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionValue
entryRuleFunctionValue
:
{ before(grammarAccess.getFunctionValueRule()); }
	 ruleFunctionValue
{ after(grammarAccess.getFunctionValueRule()); } 
	 EOF 
;

// Rule FunctionValue
ruleFunctionValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionValueAccess().getValueAssignment()); }
		(rule__FunctionValue__ValueAssignment)
		{ after(grammarAccess.getFunctionValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataValue
entryRuleDataValue
:
{ before(grammarAccess.getDataValueRule()); }
	 ruleDataValue
{ after(grammarAccess.getDataValueRule()); } 
	 EOF 
;

// Rule DataValue
ruleDataValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataValueAccess().getGroup()); }
		(rule__DataValue__Group__0)
		{ after(grammarAccess.getDataValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueRef
entryRuleValueRef
:
{ before(grammarAccess.getValueRefRule()); }
	 ruleValueRef
{ after(grammarAccess.getValueRefRule()); } 
	 EOF 
;

// Rule ValueRef
ruleValueRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueRefAccess().getGroup()); }
		(rule__ValueRef__Group__0)
		{ after(grammarAccess.getValueRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePureLambda
entryRulePureLambda
:
{ before(grammarAccess.getPureLambdaRule()); }
	 rulePureLambda
{ after(grammarAccess.getPureLambdaRule()); } 
	 EOF 
;

// Rule PureLambda
rulePureLambda 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPureLambdaAccess().getGroup()); }
		(rule__PureLambda__Group__0)
		{ after(grammarAccess.getPureLambdaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffectFullLambda
entryRuleEffectFullLambda
:
{ before(grammarAccess.getEffectFullLambdaRule()); }
	 ruleEffectFullLambda
{ after(grammarAccess.getEffectFullLambdaRule()); } 
	 EOF 
;

// Rule EffectFullLambda
ruleEffectFullLambda 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectFullLambdaAccess().getGroup()); }
		(rule__EffectFullLambda__Group__0)
		{ after(grammarAccess.getEffectFullLambdaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdtValue
entryRuleAdtValue
:
{ before(grammarAccess.getAdtValueRule()); }
	 ruleAdtValue
{ after(grammarAccess.getAdtValueRule()); } 
	 EOF 
;

// Rule AdtValue
ruleAdtValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdtValueAccess().getAlternatives()); }
		(rule__AdtValue__Alternatives)
		{ after(grammarAccess.getAdtValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProdValue
entryRuleProdValue
:
{ before(grammarAccess.getProdValueRule()); }
	 ruleProdValue
{ after(grammarAccess.getProdValueRule()); } 
	 EOF 
;

// Rule ProdValue
ruleProdValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProdValueAccess().getGroup()); }
		(rule__ProdValue__Group__0)
		{ after(grammarAccess.getProdValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSumValue
entryRuleSumValue
:
{ before(grammarAccess.getSumValueRule()); }
	 ruleSumValue
{ after(grammarAccess.getSumValueRule()); } 
	 EOF 
;

// Rule SumValue
ruleSumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumValueAccess().getAlternatives()); }
		(rule__SumValue__Alternatives)
		{ after(grammarAccess.getSumValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitivePureFunction
entryRulePrimitivePureFunction
:
{ before(grammarAccess.getPrimitivePureFunctionRule()); }
	 rulePrimitivePureFunction
{ after(grammarAccess.getPrimitivePureFunctionRule()); } 
	 EOF 
;

// Rule PrimitivePureFunction
rulePrimitivePureFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitivePureFunctionAccess().getAlternatives()); }
		(rule__PrimitivePureFunction__Alternatives)
		{ after(grammarAccess.getPrimitivePureFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntToString
entryRuleIntToString
:
{ before(grammarAccess.getIntToStringRule()); }
	 ruleIntToString
{ after(grammarAccess.getIntToStringRule()); } 
	 EOF 
;

// Rule IntToString
ruleIntToString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntToStringAccess().getGroup()); }
		(rule__IntToString__Group__0)
		{ after(grammarAccess.getIntToStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntPow
entryRuleIntPow
:
{ before(grammarAccess.getIntPowRule()); }
	 ruleIntPow
{ after(grammarAccess.getIntPowRule()); } 
	 EOF 
;

// Rule IntPow
ruleIntPow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntPowAccess().getGroup()); }
		(rule__IntPow__Group__0)
		{ after(grammarAccess.getIntPowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlus
entryRulePlus
:
{ before(grammarAccess.getPlusRule()); }
	 rulePlus
{ after(grammarAccess.getPlusRule()); } 
	 EOF 
;

// Rule Plus
rulePlus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusAccess().getGroup()); }
		(rule__Plus__Group__0)
		{ after(grammarAccess.getPlusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinus
entryRuleMinus
:
{ before(grammarAccess.getMinusRule()); }
	 ruleMinus
{ after(grammarAccess.getMinusRule()); } 
	 EOF 
;

// Rule Minus
ruleMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinusAccess().getGroup()); }
		(rule__Minus__Group__0)
		{ after(grammarAccess.getMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimes
entryRuleTimes
:
{ before(grammarAccess.getTimesRule()); }
	 ruleTimes
{ after(grammarAccess.getTimesRule()); } 
	 EOF 
;

// Rule Times
ruleTimes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimesAccess().getGroup()); }
		(rule__Times__Group__0)
		{ after(grammarAccess.getTimesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMod
entryRuleMod
:
{ before(grammarAccess.getModRule()); }
	 ruleMod
{ after(grammarAccess.getModRule()); } 
	 EOF 
;

// Rule Mod
ruleMod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModAccess().getGroup()); }
		(rule__Mod__Group__0)
		{ after(grammarAccess.getModAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApply
entryRuleApply
:
{ before(grammarAccess.getApplyRule()); }
	 ruleApply
{ after(grammarAccess.getApplyRule()); } 
	 EOF 
;

// Rule Apply
ruleApply 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplyAccess().getGroup()); }
		(rule__Apply__Group__0)
		{ after(grammarAccess.getApplyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveEffectFullFunction
entryRulePrimitiveEffectFullFunction
:
{ before(grammarAccess.getPrimitiveEffectFullFunctionRule()); }
	 rulePrimitiveEffectFullFunction
{ after(grammarAccess.getPrimitiveEffectFullFunctionRule()); } 
	 EOF 
;

// Rule PrimitiveEffectFullFunction
rulePrimitiveEffectFullFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveEffectFullFunctionAccess().getPrimitivePrintParserRuleCall()); }
		rulePrimitivePrint
		{ after(grammarAccess.getPrimitiveEffectFullFunctionAccess().getPrimitivePrintParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitivePrint
entryRulePrimitivePrint
:
{ before(grammarAccess.getPrimitivePrintRule()); }
	 rulePrimitivePrint
{ after(grammarAccess.getPrimitivePrintRule()); } 
	 EOF 
;

// Rule PrimitivePrint
rulePrimitivePrint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitivePrintAccess().getGroup()); }
		(rule__PrimitivePrint__Group__0)
		{ after(grammarAccess.getPrimitivePrintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdtTypeAccess().getValueTypeParserRuleCall_0()); }
		ruleValueType
		{ after(grammarAccess.getAdtTypeAccess().getValueTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdtTypeAccess().getGroup_1()); }
		(rule__AdtType__Group_1__0)
		{ after(grammarAccess.getAdtTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__AdtElement2Alternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdtTypeAccess().getAdtElement2SumTypeParserRuleCall_1_2_0_0()); }
		ruleSumType
		{ after(grammarAccess.getAdtTypeAccess().getAdtElement2SumTypeParserRuleCall_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdtTypeAccess().getAdtElement2ProdTypeParserRuleCall_1_2_0_1()); }
		ruleProdType
		{ after(grammarAccess.getAdtTypeAccess().getAdtElement2ProdTypeParserRuleCall_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBodyPure__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyPureAccess().getEmptyFunctionBodyParserRuleCall_0()); }
		ruleEmptyFunctionBody
		{ after(grammarAccess.getFunctionBodyPureAccess().getEmptyFunctionBodyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyPureAccess().getCompositionFunctionBodyPureParserRuleCall_1()); }
		ruleCompositionFunctionBodyPure
		{ after(grammarAccess.getFunctionBodyPureAccess().getCompositionFunctionBodyPureParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBodyEffectFull__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyEffectFullAccess().getEmptyFunctionBodyParserRuleCall_0()); }
		ruleEmptyFunctionBody
		{ after(grammarAccess.getFunctionBodyEffectFullAccess().getEmptyFunctionBodyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyEffectFullAccess().getCompositionFunctionBodyEffectParserRuleCall_1()); }
		ruleCompositionFunctionBodyEffect
		{ after(grammarAccess.getFunctionBodyEffectFullAccess().getCompositionFunctionBodyEffectParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup_0()); }
		(rule__CompositionFunctionBodyPure__Group_0__0)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup_1()); }
		(rule__CompositionFunctionBodyPure__Group_1__0)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getGroup_0()); }
		(rule__CompositionFunctionBodyPureFactor__Group_0__0)
		{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getGroup_1()); }
		(rule__CompositionFunctionBodyPureFactor__Group_1__0)
		{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup_0()); }
		(rule__CompositionFunctionBodyEffect__Group_0__0)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup_1()); }
		(rule__CompositionFunctionBodyEffect__Group_1__0)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getGroup_0()); }
		(rule__CompositionFunctionBodyEffectFullFactor__Group_0__0)
		{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getGroup_1()); }
		(rule__CompositionFunctionBodyEffectFullFactor__Group_1__0)
		{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__PrimitiveElementAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getPrimitiveElementPrimitiveEffectFullFunctionParserRuleCall_1_1_0_0()); }
		rulePrimitiveEffectFullFunction
		{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getPrimitiveElementPrimitiveEffectFullFunctionParserRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getPrimitiveElementPrimitivePureFunctionParserRuleCall_1_1_0_1()); }
		rulePrimitivePureFunction
		{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getPrimitiveElementPrimitivePureFunctionParserRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeAccess().getIntegerTypeParserRuleCall_0()); }
		ruleIntegerType
		{ after(grammarAccess.getValueTypeAccess().getIntegerTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getStringTypeParserRuleCall_1()); }
		ruleStringType
		{ after(grammarAccess.getValueTypeAccess().getStringTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getDataTypeParserRuleCall_2()); }
		ruleDataType
		{ after(grammarAccess.getValueTypeAccess().getDataTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getPureFunctionTypeParserRuleCall_3()); }
		rulePureFunctionType
		{ after(grammarAccess.getValueTypeAccess().getPureFunctionTypeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getValueTypeParserRuleCall_0()); }
		ruleValueType
		{ after(grammarAccess.getTypeAccess().getValueTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getUnitTypeParserRuleCall_1()); }
		ruleUnitType
		{ after(grammarAccess.getTypeAccess().getUnitTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEffectFullFunctionTypeParserRuleCall_2()); }
		ruleEffectFullFunctionType
		{ after(grammarAccess.getTypeAccess().getEffectFullFunctionTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getIntValueParserRuleCall_0()); }
		ruleIntValue
		{ after(grammarAccess.getExpressionAccess().getIntValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getStringValueParserRuleCall_1()); }
		ruleStringValue
		{ after(grammarAccess.getExpressionAccess().getStringValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getUnitValueParserRuleCall_2()); }
		ruleUnitValue
		{ after(grammarAccess.getExpressionAccess().getUnitValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getDataValueParserRuleCall_3()); }
		ruleDataValue
		{ after(grammarAccess.getExpressionAccess().getDataValueParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFunctionValueParserRuleCall_4()); }
		ruleFunctionValue
		{ after(grammarAccess.getExpressionAccess().getFunctionValueParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdtValueAccess().getIntValueParserRuleCall_0()); }
		ruleIntValue
		{ after(grammarAccess.getAdtValueAccess().getIntValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdtValueAccess().getStringValueParserRuleCall_1()); }
		ruleStringValue
		{ after(grammarAccess.getAdtValueAccess().getStringValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdtValueAccess().getValueRefParserRuleCall_2()); }
		ruleValueRef
		{ after(grammarAccess.getAdtValueAccess().getValueRefParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdtValueAccess().getDataValueParserRuleCall_3()); }
		ruleDataValue
		{ after(grammarAccess.getAdtValueAccess().getDataValueParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAdtValueAccess().getSumValueParserRuleCall_4()); }
		ruleSumValue
		{ after(grammarAccess.getAdtValueAccess().getSumValueParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAdtValueAccess().getFunctionValueParserRuleCall_5()); }
		ruleFunctionValue
		{ after(grammarAccess.getAdtValueAccess().getFunctionValueParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAdtValueAccess().getProdValueParserRuleCall_6()); }
		ruleProdValue
		{ after(grammarAccess.getAdtValueAccess().getProdValueParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumValueAccess().getGroup_0()); }
		(rule__SumValue__Group_0__0)
		{ after(grammarAccess.getSumValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSumValueAccess().getGroup_1()); }
		(rule__SumValue__Group_1__0)
		{ after(grammarAccess.getSumValueAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitivePureFunction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitivePureFunctionAccess().getIntToStringParserRuleCall_0()); }
		ruleIntToString
		{ after(grammarAccess.getPrimitivePureFunctionAccess().getIntToStringParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitivePureFunctionAccess().getIntPowParserRuleCall_1()); }
		ruleIntPow
		{ after(grammarAccess.getPrimitivePureFunctionAccess().getIntPowParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitivePureFunctionAccess().getPlusParserRuleCall_2()); }
		rulePlus
		{ after(grammarAccess.getPrimitivePureFunctionAccess().getPlusParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitivePureFunctionAccess().getMinusParserRuleCall_3()); }
		ruleMinus
		{ after(grammarAccess.getPrimitivePureFunctionAccess().getMinusParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitivePureFunctionAccess().getTimesParserRuleCall_4()); }
		ruleTimes
		{ after(grammarAccess.getPrimitivePureFunctionAccess().getTimesParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitivePureFunctionAccess().getModParserRuleCall_5()); }
		ruleMod
		{ after(grammarAccess.getPrimitivePureFunctionAccess().getModParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitivePureFunctionAccess().getApplyParserRuleCall_6()); }
		ruleApply
		{ after(grammarAccess.getPrimitivePureFunctionAccess().getApplyParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_0()); }
	(rule__Model__ElementsAssignment_0)
	{ after(grammarAccess.getModelAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_1()); }
	(rule__Model__ElementsAssignment_1)
	{ after(grammarAccess.getModelAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PureBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__0__Impl
	rule__PureBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getPureKeyword_0()); }
	'Pure'
	{ after(grammarAccess.getPureBlockAccess().getPureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__1__Impl
	rule__PureBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPureBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__2__Impl
	rule__PureBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getElementsAssignment_2()); }
	(rule__PureBlock__ElementsAssignment_2)
	{ after(grammarAccess.getPureBlockAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__3__Impl
	rule__PureBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getElementsAssignment_3()); }
	(rule__PureBlock__ElementsAssignment_3)
	{ after(grammarAccess.getPureBlockAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureBlockAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPureBlockAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PureFunctionBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionBlock__Group__0__Impl
	rule__PureFunctionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionBlockAccess().getFunctionsKeyword_0()); }
	'Functions'
	{ after(grammarAccess.getPureFunctionBlockAccess().getFunctionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionBlock__Group__1__Impl
	rule__PureFunctionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPureFunctionBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionBlock__Group__2__Impl
	rule__PureFunctionBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionBlockAccess().getFeaturesAssignment_2()); }
	(rule__PureFunctionBlock__FeaturesAssignment_2)*
	{ after(grammarAccess.getPureFunctionBlockAccess().getFeaturesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getPureFunctionBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__0__Impl
	rule__DataBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getDataKeyword_0()); }
	'Data'
	{ after(grammarAccess.getDataBlockAccess().getDataKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__1__Impl
	rule__DataBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDataBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__2__Impl
	rule__DataBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getElementsAssignment_2()); }
	(rule__DataBlock__ElementsAssignment_2)*
	{ after(grammarAccess.getDataBlockAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__3__Impl
	rule__DataBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getValueAssignment_3()); }
	(rule__DataBlock__ValueAssignment_3)
	{ after(grammarAccess.getDataBlockAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBlockAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDataBlockAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueBlock__Group__0__Impl
	rule__ValueBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueBlockAccess().getValueKeyword_0()); }
	'Value'
	{ after(grammarAccess.getValueBlockAccess().getValueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueBlock__Group__1__Impl
	rule__ValueBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getValueBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueBlock__Group__2__Impl
	rule__ValueBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueBlockAccess().getElementsAssignment_2()); }
	(rule__ValueBlock__ElementsAssignment_2)*
	{ after(grammarAccess.getValueBlockAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getValueBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EffectFullBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__0__Impl
	rule__EffectFullBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getEffectsKeyword_0()); }
	'Effects'
	{ after(grammarAccess.getEffectFullBlockAccess().getEffectsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__1__Impl
	rule__EffectFullBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEffectFullBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__2__Impl
	rule__EffectFullBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getFeaturesAssignment_2()); }
	(rule__EffectFullBlock__FeaturesAssignment_2)*
	{ after(grammarAccess.getEffectFullBlockAccess().getFeaturesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__3__Impl
	rule__EffectFullBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getMainAssignment_3()); }
	(rule__EffectFullBlock__MainAssignment_3)
	{ after(grammarAccess.getEffectFullBlockAccess().getMainAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullBlockAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEffectFullBlockAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__0__Impl
	rule__Data__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getNameAssignment_0()); }
	(rule__Data__NameAssignment_0)
	{ after(grammarAccess.getDataAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__1__Impl
	rule__Data__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDataAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getContentAssignment_2()); }
	(rule__Data__ContentAssignment_2)
	{ after(grammarAccess.getDataAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__0__Impl
	rule__Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getNameAssignment_0()); }
	(rule__Value__NameAssignment_0)
	{ after(grammarAccess.getValueAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__1__Impl
	rule__Value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getValueAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueAssignment_2()); }
	(rule__Value__ValueAssignment_2)
	{ after(grammarAccess.getValueAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdtType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdtType__Group_1__0__Impl
	rule__AdtType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdtTypeAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getAdtTypeAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdtType__Group_1__1__Impl
	rule__AdtType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdtTypeAccess().getAdtElement1Assignment_1_1()); }
	(rule__AdtType__AdtElement1Assignment_1_1)
	{ after(grammarAccess.getAdtTypeAccess().getAdtElement1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdtType__Group_1__2__Impl
	rule__AdtType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdtTypeAccess().getAdtElement2Assignment_1_2()); }
	(rule__AdtType__AdtElement2Assignment_1_2)
	{ after(grammarAccess.getAdtTypeAccess().getAdtElement2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdtType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdtTypeAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getAdtTypeAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumType__Group__0__Impl
	rule__SumType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumTypeAccess().getPlusSignKeyword_0()); }
	'+'
	{ after(grammarAccess.getSumTypeAccess().getPlusSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumTypeAccess().getAdtElementAssignment_1()); }
	(rule__SumType__AdtElementAssignment_1)
	{ after(grammarAccess.getSumTypeAccess().getAdtElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProdType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdType__Group__0__Impl
	rule__ProdType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdTypeAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getProdTypeAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdTypeAccess().getAdtElementAssignment_1()); }
	(rule__ProdType__AdtElementAssignment_1)
	{ after(grammarAccess.getProdTypeAccess().getAdtElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PureFunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__0__Impl
	rule__PureFunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__1__Impl
	rule__PureFunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getReturnTypeAssignment_1()); }
	(rule__PureFunctionDefinition__ReturnTypeAssignment_1)
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__2__Impl
	rule__PureFunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getNameAssignment_2()); }
	(rule__PureFunctionDefinition__NameAssignment_2)
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__3__Impl
	rule__PureFunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__4__Impl
	rule__PureFunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getArgAssignment_4()); }
	(rule__PureFunctionDefinition__ArgAssignment_4)
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getArgAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__5__Impl
	rule__PureFunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__6__Impl
	rule__PureFunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__7__Impl
	rule__PureFunctionDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__8__Impl
	rule__PureFunctionDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getFunctionBodyAssignment_8()); }
	(rule__PureFunctionDefinition__FunctionBodyAssignment_8)
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getFunctionBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionDefinition__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionDefinitionAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getPureFunctionDefinitionAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EffectFullFunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__0__Impl
	rule__EffectFullFunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__1__Impl
	rule__EffectFullFunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getReturnTypeAssignment_1()); }
	(rule__EffectFullFunctionDefinition__ReturnTypeAssignment_1)
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__2__Impl
	rule__EffectFullFunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getNameAssignment_2()); }
	(rule__EffectFullFunctionDefinition__NameAssignment_2)
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__3__Impl
	rule__EffectFullFunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__4__Impl
	rule__EffectFullFunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getArgAssignment_4()); }
	(rule__EffectFullFunctionDefinition__ArgAssignment_4)
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getArgAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__5__Impl
	rule__EffectFullFunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__6__Impl
	rule__EffectFullFunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__7__Impl
	rule__EffectFullFunctionDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__8__Impl
	rule__EffectFullFunctionDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getFunctionBodyAssignment_8()); }
	(rule__EffectFullFunctionDefinition__FunctionBodyAssignment_8)
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getFunctionBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionDefinition__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__0__Impl
	rule__MainFunc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getIOKeyword_0()); }
	'IO'
	{ after(grammarAccess.getMainFuncAccess().getIOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__1__Impl
	rule__MainFunc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getReturnTypeAssignment_1()); }
	(rule__MainFunc__ReturnTypeAssignment_1)
	{ after(grammarAccess.getMainFuncAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__2__Impl
	rule__MainFunc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getMainKeyword_2()); }
	'main'
	{ after(grammarAccess.getMainFuncAccess().getMainKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__3__Impl
	rule__MainFunc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getMainFuncAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__4__Impl
	rule__MainFunc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getMainFuncAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__5__Impl
	rule__MainFunc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getFunctionBodyAssignment_5()); }
	(rule__MainFunc__FunctionBodyAssignment_5)
	{ after(grammarAccess.getMainFuncAccess().getFunctionBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainFunc__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainFuncAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getMainFuncAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EffectFullArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullArgument__Group__0__Impl
	rule__EffectFullArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullArgumentAccess().getTypeAssignment_0()); }
	(rule__EffectFullArgument__TypeAssignment_0)
	{ after(grammarAccess.getEffectFullArgumentAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullArgumentAccess().getNameAssignment_1()); }
	(rule__EffectFullArgument__NameAssignment_1)
	{ after(grammarAccess.getEffectFullArgumentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getTypeAssignment_0()); }
	(rule__Argument__TypeAssignment_0)
	{ after(grammarAccess.getArgumentAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
	(rule__Argument__NameAssignment_1)
	{ after(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyFunctionBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyFunctionBody__Group__0__Impl
	rule__EmptyFunctionBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyFunctionBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyFunctionBodyAccess().getEmptyFunctionBodyAction_0()); }
	()
	{ after(grammarAccess.getEmptyFunctionBodyAccess().getEmptyFunctionBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyFunctionBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyFunctionBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyFunctionBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyFunctionBodyAccess().getUndefinedKeyword_1()); }
	'Undefined'
	{ after(grammarAccess.getEmptyFunctionBodyAccess().getUndefinedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyPure__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_0__0__Impl
	rule__CompositionFunctionBodyPure__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getReferenceElementAssignment_0_0()); }
	(rule__CompositionFunctionBodyPure__ReferenceElementAssignment_0_0)
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getReferenceElementAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_0__1__Impl
	rule__CompositionFunctionBodyPure__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_0_1()); }
		(rule__CompositionFunctionBodyPure__FunctionChainAssignment_0_1)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_0_1()); }
	)
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_0_1()); }
		(rule__CompositionFunctionBodyPure__FunctionChainAssignment_0_1)*
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getReturnFunctionAssignment_0_2()); }
	(rule__CompositionFunctionBodyPure__ReturnFunctionAssignment_0_2)?
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getReturnFunctionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyPure__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_1__0__Impl
	rule__CompositionFunctionBodyPure__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getPrimitiveElementAssignment_1_0()); }
	(rule__CompositionFunctionBodyPure__PrimitiveElementAssignment_1_0)
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getPrimitiveElementAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_1__1__Impl
	rule__CompositionFunctionBodyPure__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_1_1()); }
		(rule__CompositionFunctionBodyPure__FunctionChainAssignment_1_1)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_1_1()); }
	)
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_1_1()); }
		(rule__CompositionFunctionBodyPure__FunctionChainAssignment_1_1)*
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainAssignment_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPure__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getReturnFunctionAssignment_1_2()); }
	(rule__CompositionFunctionBodyPure__ReturnFunctionAssignment_1_2)?
	{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getReturnFunctionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyPureFactor__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPureFactor__Group_0__0__Impl
	rule__CompositionFunctionBodyPureFactor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getVerticalLineGreaterThanSignKeyword_0_0()); }
	'|>'
	{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getVerticalLineGreaterThanSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPureFactor__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getReferenceElementAssignment_0_1()); }
	(rule__CompositionFunctionBodyPureFactor__ReferenceElementAssignment_0_1)
	{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getReferenceElementAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyPureFactor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPureFactor__Group_1__0__Impl
	rule__CompositionFunctionBodyPureFactor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getVerticalLineGreaterThanSignKeyword_1_0()); }
	'|>'
	{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getVerticalLineGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyPureFactor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getPrimitiveElementAssignment_1_1()); }
	(rule__CompositionFunctionBodyPureFactor__PrimitiveElementAssignment_1_1)
	{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getPrimitiveElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyEffect__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_0__0__Impl
	rule__CompositionFunctionBodyEffect__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getReferenceElementAssignment_0_0()); }
	(rule__CompositionFunctionBodyEffect__ReferenceElementAssignment_0_0)
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getReferenceElementAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_0__1__Impl
	rule__CompositionFunctionBodyEffect__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_0_1()); }
		(rule__CompositionFunctionBodyEffect__FunctionChainAssignment_0_1)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_0_1()); }
	)
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_0_1()); }
		(rule__CompositionFunctionBodyEffect__FunctionChainAssignment_0_1)*
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getReturnFunctionAssignment_0_2()); }
	(rule__CompositionFunctionBodyEffect__ReturnFunctionAssignment_0_2)?
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getReturnFunctionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyEffect__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_1__0__Impl
	rule__CompositionFunctionBodyEffect__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getPrimitiveElementAssignment_1_0()); }
	(rule__CompositionFunctionBodyEffect__PrimitiveElementAssignment_1_0)
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getPrimitiveElementAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_1__1__Impl
	rule__CompositionFunctionBodyEffect__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_1_1()); }
		(rule__CompositionFunctionBodyEffect__FunctionChainAssignment_1_1)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_1_1()); }
	)
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_1_1()); }
		(rule__CompositionFunctionBodyEffect__FunctionChainAssignment_1_1)*
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainAssignment_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffect__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getReturnFunctionAssignment_1_2()); }
	(rule__CompositionFunctionBodyEffect__ReturnFunctionAssignment_1_2)?
	{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getReturnFunctionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyEffectFullFactor__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffectFullFactor__Group_0__0__Impl
	rule__CompositionFunctionBodyEffectFullFactor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_0_0()); }
	'>>='
	{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffectFullFactor__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getReferenceElementAssignment_0_1()); }
	(rule__CompositionFunctionBodyEffectFullFactor__ReferenceElementAssignment_0_1)
	{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getReferenceElementAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionFunctionBodyEffectFullFactor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffectFullFactor__Group_1__0__Impl
	rule__CompositionFunctionBodyEffectFullFactor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_1_0()); }
	'>>='
	{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionFunctionBodyEffectFullFactor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getPrimitiveElementAssignment_1_1()); }
	(rule__CompositionFunctionBodyEffectFullFactor__PrimitiveElementAssignment_1_1)
	{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getPrimitiveElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnPureFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnPureFunction__Group__0__Impl
	rule__ReturnPureFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnPureFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnPureFunctionAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getReturnPureFunctionAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnPureFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnPureFunction__Group__1__Impl
	rule__ReturnPureFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnPureFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnPureFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReturnPureFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnPureFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnPureFunction__Group__2__Impl
	rule__ReturnPureFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnPureFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnPureFunctionAccess().getLambdaFunctionBodyAssignment_2()); }
	(rule__ReturnPureFunction__LambdaFunctionBodyAssignment_2)
	{ after(grammarAccess.getReturnPureFunctionAccess().getLambdaFunctionBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnPureFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnPureFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnPureFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnPureFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getReturnPureFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnEffectFullFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnEffectFullFunction__Group__0__Impl
	rule__ReturnEffectFullFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnEffectFullFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnEffectFullFunctionAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getReturnEffectFullFunctionAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnEffectFullFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnEffectFullFunction__Group__1__Impl
	rule__ReturnEffectFullFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnEffectFullFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnEffectFullFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReturnEffectFullFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnEffectFullFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnEffectFullFunction__Group__2__Impl
	rule__ReturnEffectFullFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnEffectFullFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnEffectFullFunctionAccess().getLambdaFunctionBodyAssignment_2()); }
	(rule__ReturnEffectFullFunction__LambdaFunctionBodyAssignment_2)
	{ after(grammarAccess.getReturnEffectFullFunctionAccess().getLambdaFunctionBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnEffectFullFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnEffectFullFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnEffectFullFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnEffectFullFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getReturnEffectFullFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IOType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IOType__Group__0__Impl
	rule__IOType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IOType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIOTypeAccess().getIOKeyword_0()); }
	'IO'
	{ after(grammarAccess.getIOTypeAccess().getIOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IOType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IOType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IOType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIOTypeAccess().getTypeAssignment_1()); }
	(rule__IOType__TypeAssignment_1)
	{ after(grammarAccess.getIOTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerType__Group__0__Impl
	rule__IntegerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0()); }
	()
	{ after(grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerTypeAccess().getTypeAssignment_1()); }
	(rule__IntegerType__TypeAssignment_1)
	{ after(grammarAccess.getIntegerTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringType__Group__0__Impl
	rule__StringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
	()
	{ after(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTypeAccess().getTypeAssignment_1()); }
	(rule__StringType__TypeAssignment_1)
	{ after(grammarAccess.getStringTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitType__Group__0__Impl
	rule__UnitType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTypeAccess().getUnitTypeAction_0()); }
	()
	{ after(grammarAccess.getUnitTypeAccess().getUnitTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTypeAccess().getTypeAssignment_1()); }
	(rule__UnitType__TypeAssignment_1)
	{ after(grammarAccess.getUnitTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDataTypeAction_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getDataTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
	rule__DataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getRefKeyword_1()); }
	'ref'
	{ after(grammarAccess.getDataTypeAccess().getRefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_2()); }
	(rule__DataType__TypeAssignment_2)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PureFunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionType__Group__0__Impl
	rule__PureFunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionTypeAccess().getPureFunctionTypeAction_0()); }
	()
	{ after(grammarAccess.getPureFunctionTypeAccess().getPureFunctionTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionType__Group__1__Impl
	rule__PureFunctionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionTypeAccess().getFKeyword_1()); }
	'F'
	{ after(grammarAccess.getPureFunctionTypeAccess().getFKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionType__Group__2__Impl
	rule__PureFunctionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionTypeAccess().getLessThanSignKeyword_2()); }
	'<'
	{ after(grammarAccess.getPureFunctionTypeAccess().getLessThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionType__Group__3__Impl
	rule__PureFunctionType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionTypeAccess().getArgTypeAssignment_3()); }
	(rule__PureFunctionType__ArgTypeAssignment_3)
	{ after(grammarAccess.getPureFunctionTypeAccess().getArgTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionType__Group__4__Impl
	rule__PureFunctionType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionTypeAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getPureFunctionTypeAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionType__Group__5__Impl
	rule__PureFunctionType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionTypeAccess().getReturnTypeAssignment_5()); }
	(rule__PureFunctionType__ReturnTypeAssignment_5)
	{ after(grammarAccess.getPureFunctionTypeAccess().getReturnTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureFunctionType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureFunctionTypeAccess().getGreaterThanSignKeyword_6()); }
	'>'
	{ after(grammarAccess.getPureFunctionTypeAccess().getGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EffectFullFunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionType__Group__0__Impl
	rule__EffectFullFunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionTypeAccess().getEffectFullFunctionTypeAction_0()); }
	()
	{ after(grammarAccess.getEffectFullFunctionTypeAccess().getEffectFullFunctionTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionType__Group__1__Impl
	rule__EffectFullFunctionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionTypeAccess().getFIOKeyword_1()); }
	'FIO'
	{ after(grammarAccess.getEffectFullFunctionTypeAccess().getFIOKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionType__Group__2__Impl
	rule__EffectFullFunctionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionTypeAccess().getLessThanSignKeyword_2()); }
	'<'
	{ after(grammarAccess.getEffectFullFunctionTypeAccess().getLessThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionType__Group__3__Impl
	rule__EffectFullFunctionType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionTypeAccess().getArgTypeAssignment_3()); }
	(rule__EffectFullFunctionType__ArgTypeAssignment_3)
	{ after(grammarAccess.getEffectFullFunctionTypeAccess().getArgTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionType__Group__4__Impl
	rule__EffectFullFunctionType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionTypeAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getEffectFullFunctionTypeAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionType__Group__5__Impl
	rule__EffectFullFunctionType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionTypeAccess().getReturnTypeAssignment_5()); }
	(rule__EffectFullFunctionType__ReturnTypeAssignment_5)
	{ after(grammarAccess.getEffectFullFunctionTypeAccess().getReturnTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullFunctionType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullFunctionTypeAccess().getGreaterThanSignKeyword_6()); }
	'>'
	{ after(grammarAccess.getEffectFullFunctionTypeAccess().getGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntValue__Group__0__Impl
	rule__IntValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntValueAccess().getIntegerTypeAction_0()); }
	()
	{ after(grammarAccess.getIntValueAccess().getIntegerTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntValueAccess().getValueAssignment_1()); }
	(rule__IntValue__ValueAssignment_1)
	{ after(grammarAccess.getIntValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group__0__Impl
	rule__StringValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getStringTypeAction_0()); }
	()
	{ after(grammarAccess.getStringValueAccess().getStringTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getValueAssignment_1()); }
	(rule__StringValue__ValueAssignment_1)
	{ after(grammarAccess.getStringValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitValue__Group__0__Impl
	rule__UnitValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitValueAccess().getUnitTypeAction_0()); }
	()
	{ after(grammarAccess.getUnitValueAccess().getUnitTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitValueAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
	'()'
	{ after(grammarAccess.getUnitValueAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataValue__Group__0__Impl
	rule__DataValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataValueAccess().getDataValueAction_0()); }
	()
	{ after(grammarAccess.getDataValueAccess().getDataValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataValue__Group__1__Impl
	rule__DataValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataValueAccess().getTypeAssignment_1()); }
	(rule__DataValue__TypeAssignment_1)
	{ after(grammarAccess.getDataValueAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataValue__Group__2__Impl
	rule__DataValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataValueAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDataValueAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataValue__Group__3__Impl
	rule__DataValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataValueAccess().getValueAssignment_3()); }
	(rule__DataValue__ValueAssignment_3)
	{ after(grammarAccess.getDataValueAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataValueAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDataValueAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRef__Group__0__Impl
	rule__ValueRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRefAccess().getValueRefAction_0()); }
	()
	{ after(grammarAccess.getValueRefAccess().getValueRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRefAccess().getValueAssignment_1()); }
	(rule__ValueRef__ValueAssignment_1)
	{ after(grammarAccess.getValueRefAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PureLambda__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureLambda__Group__0__Impl
	rule__PureLambda__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureLambdaAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getPureLambdaAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureLambda__Group__1__Impl
	rule__PureLambda__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureLambdaAccess().getArgAssignment_1()); }
	(rule__PureLambda__ArgAssignment_1)
	{ after(grammarAccess.getPureLambdaAccess().getArgAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureLambda__Group__2__Impl
	rule__PureLambda__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureLambdaAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getPureLambdaAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureLambda__Group__3__Impl
	rule__PureLambda__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureLambdaAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getPureLambdaAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PureLambda__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPureLambdaAccess().getFunctionBodyAssignment_4()); }
	(rule__PureLambda__FunctionBodyAssignment_4)
	{ after(grammarAccess.getPureLambdaAccess().getFunctionBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EffectFullLambda__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullLambda__Group__0__Impl
	rule__EffectFullLambda__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullLambdaAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEffectFullLambdaAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullLambda__Group__1__Impl
	rule__EffectFullLambda__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullLambdaAccess().getArgAssignment_1()); }
	(rule__EffectFullLambda__ArgAssignment_1)
	{ after(grammarAccess.getEffectFullLambdaAccess().getArgAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullLambda__Group__2__Impl
	rule__EffectFullLambda__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullLambdaAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getEffectFullLambdaAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullLambda__Group__3__Impl
	rule__EffectFullLambda__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullLambdaAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getEffectFullLambdaAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EffectFullLambda__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectFullLambdaAccess().getFunctionBodyAssignment_4()); }
	(rule__EffectFullLambda__FunctionBodyAssignment_4)
	{ after(grammarAccess.getEffectFullLambdaAccess().getFunctionBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProdValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdValue__Group__0__Impl
	rule__ProdValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdValueAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getProdValueAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdValue__Group__1__Impl
	rule__ProdValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdValueAccess().getProdAdtElement1Assignment_1()); }
	(rule__ProdValue__ProdAdtElement1Assignment_1)
	{ after(grammarAccess.getProdValueAccess().getProdAdtElement1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdValue__Group__2__Impl
	rule__ProdValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdValueAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getProdValueAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdValue__Group__3__Impl
	rule__ProdValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdValueAccess().getProdAdtElement2Assignment_3()); }
	(rule__ProdValue__ProdAdtElement2Assignment_3)
	{ after(grammarAccess.getProdValueAccess().getProdAdtElement2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdValueAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getProdValueAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumValue__Group_0__0__Impl
	rule__SumValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumValueAccess().getLeftKeyword_0_0()); }
	'Left'
	{ after(grammarAccess.getSumValueAccess().getLeftKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumValue__Group_0__1__Impl
	rule__SumValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumValueAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getSumValueAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumValue__Group_0__2__Impl
	rule__SumValue__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumValueAccess().getSumAdtElement1Assignment_0_2()); }
	(rule__SumValue__SumAdtElement1Assignment_0_2)
	{ after(grammarAccess.getSumValueAccess().getSumAdtElement1Assignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumValue__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumValueAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getSumValueAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumValue__Group_1__0__Impl
	rule__SumValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumValueAccess().getRightKeyword_1_0()); }
	'Right'
	{ after(grammarAccess.getSumValueAccess().getRightKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumValue__Group_1__1__Impl
	rule__SumValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumValueAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getSumValueAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumValue__Group_1__2__Impl
	rule__SumValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumValueAccess().getSumAdtElement2Assignment_1_2()); }
	(rule__SumValue__SumAdtElement2Assignment_1_2)
	{ after(grammarAccess.getSumValueAccess().getSumAdtElement2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumValue__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumValueAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getSumValueAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntToString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntToString__Group__0__Impl
	rule__IntToString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntToString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntToStringAccess().getIntToStringAction_0()); }
	()
	{ after(grammarAccess.getIntToStringAccess().getIntToStringAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntToString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntToString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntToString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntToStringAccess().getIntToStringKeyword_1()); }
	'IntToString'
	{ after(grammarAccess.getIntToStringAccess().getIntToStringKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntPow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntPow__Group__0__Impl
	rule__IntPow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntPow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntPowAccess().getIntPowAction_0()); }
	()
	{ after(grammarAccess.getIntPowAccess().getIntPowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntPow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntPow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntPow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntPowAccess().getIntPowKeyword_1()); }
	'IntPow'
	{ after(grammarAccess.getIntPowAccess().getIntPowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Plus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plus__Group__0__Impl
	rule__Plus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusAccess().getPlusAction_0()); }
	()
	{ after(grammarAccess.getPlusAccess().getPlusAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusAccess().getPlusSignKeyword_1()); }
	'+'
	{ after(grammarAccess.getPlusAccess().getPlusSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Minus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Minus__Group__0__Impl
	rule__Minus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Minus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinusAccess().getMinusAction_0()); }
	()
	{ after(grammarAccess.getMinusAccess().getMinusAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Minus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Minus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Minus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinusAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getMinusAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Times__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Times__Group__0__Impl
	rule__Times__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Times__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimesAccess().getTimesAction_0()); }
	()
	{ after(grammarAccess.getTimesAccess().getTimesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Times__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Times__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Times__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimesAccess().getAsteriskKeyword_1()); }
	'*'
	{ after(grammarAccess.getTimesAccess().getAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mod__Group__0__Impl
	rule__Mod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModAccess().getModAction_0()); }
	()
	{ after(grammarAccess.getModAccess().getModAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mod__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModAccess().getModKeyword_1()); }
	'mod'
	{ after(grammarAccess.getModAccess().getModKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Apply__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply__Group__0__Impl
	rule__Apply__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyAccess().getApplyAction_0()); }
	()
	{ after(grammarAccess.getApplyAccess().getApplyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply__Group__1__Impl
	rule__Apply__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyAccess().getApplyKeyword_1()); }
	'apply'
	{ after(grammarAccess.getApplyAccess().getApplyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyAccess().getValueAssignment_2()); }
	(rule__Apply__ValueAssignment_2)
	{ after(grammarAccess.getApplyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitivePrint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitivePrint__Group__0__Impl
	rule__PrimitivePrint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitivePrint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitivePrintAccess().getPrimitivePrintAction_0()); }
	()
	{ after(grammarAccess.getPrimitivePrintAccess().getPrimitivePrintAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitivePrint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitivePrint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitivePrint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitivePrintAccess().getPrintKeyword_1()); }
	'print'
	{ after(grammarAccess.getPrimitivePrintAccess().getPrintKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsPureBlockParserRuleCall_0_0()); }
		rulePureBlock
		{ after(grammarAccess.getModelAccess().getElementsPureBlockParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsEffectFullBlockParserRuleCall_1_0()); }
		ruleEffectFullBlock
		{ after(grammarAccess.getModelAccess().getElementsEffectFullBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureBlockAccess().getElementsPureFunctionBlockParserRuleCall_2_0()); }
		rulePureFunctionBlock
		{ after(grammarAccess.getPureBlockAccess().getElementsPureFunctionBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureBlock__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureBlockAccess().getElementsDataBlockParserRuleCall_3_0()); }
		ruleDataBlock
		{ after(grammarAccess.getPureBlockAccess().getElementsDataBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionBlock__FeaturesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionBlockAccess().getFeaturesPureFunctionDefinitionParserRuleCall_2_0()); }
		rulePureFunctionDefinition
		{ after(grammarAccess.getPureFunctionBlockAccess().getFeaturesPureFunctionDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataBlockAccess().getElementsDataParserRuleCall_2_0()); }
		ruleData
		{ after(grammarAccess.getDataBlockAccess().getElementsDataParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataBlockAccess().getValueValueBlockParserRuleCall_3_0()); }
		ruleValueBlock
		{ after(grammarAccess.getDataBlockAccess().getValueValueBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBlock__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueBlockAccess().getElementsValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getValueBlockAccess().getElementsValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__FeaturesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullBlockAccess().getFeaturesEffectFullFunctionDefinitionParserRuleCall_2_0()); }
		ruleEffectFullFunctionDefinition
		{ after(grammarAccess.getEffectFullBlockAccess().getFeaturesEffectFullFunctionDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullBlock__MainAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullBlockAccess().getMainMainFuncParserRuleCall_3_0()); }
		ruleMainFunc
		{ after(grammarAccess.getEffectFullBlockAccess().getMainMainFuncParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDataAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getContentAdtTypeParserRuleCall_2_0()); }
		ruleAdtType
		{ after(grammarAccess.getDataAccess().getContentAdtTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getValueAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__AdtElement1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdtTypeAccess().getAdtElement1AdtTypeParserRuleCall_1_1_0()); }
		ruleAdtType
		{ after(grammarAccess.getAdtTypeAccess().getAdtElement1AdtTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdtType__AdtElement2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdtTypeAccess().getAdtElement2Alternatives_1_2_0()); }
		(rule__AdtType__AdtElement2Alternatives_1_2_0)
		{ after(grammarAccess.getAdtTypeAccess().getAdtElement2Alternatives_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumType__AdtElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumTypeAccess().getAdtElementAdtTypeParserRuleCall_1_0()); }
		ruleAdtType
		{ after(grammarAccess.getSumTypeAccess().getAdtElementAdtTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdType__AdtElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdTypeAccess().getAdtElementAdtTypeParserRuleCall_1_0()); }
		ruleAdtType
		{ after(grammarAccess.getProdTypeAccess().getAdtElementAdtTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionDefinitionAccess().getReturnTypeValueTypeParserRuleCall_1_0()); }
		ruleValueType
		{ after(grammarAccess.getPureFunctionDefinitionAccess().getReturnTypeValueTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPureFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__ArgAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionDefinitionAccess().getArgArgumentParserRuleCall_4_0()); }
		ruleArgument
		{ after(grammarAccess.getPureFunctionDefinitionAccess().getArgArgumentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionDefinition__FunctionBodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionDefinitionAccess().getFunctionBodyFunctionBodyPureParserRuleCall_8_0()); }
		ruleFunctionBodyPure
		{ after(grammarAccess.getPureFunctionDefinitionAccess().getFunctionBodyFunctionBodyPureParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getReturnTypeIOTypeParserRuleCall_1_0()); }
		ruleIOType
		{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getReturnTypeIOTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__ArgAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getArgEffectFullArgumentParserRuleCall_4_0()); }
		ruleEffectFullArgument
		{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getArgEffectFullArgumentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionDefinition__FunctionBodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionDefinitionAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_8_0()); }
		ruleFunctionBodyEffectFull
		{ after(grammarAccess.getEffectFullFunctionDefinitionAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainFuncAccess().getReturnTypeUnitTypeParserRuleCall_1_0()); }
		ruleUnitType
		{ after(grammarAccess.getMainFuncAccess().getReturnTypeUnitTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunc__FunctionBodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainFuncAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_5_0()); }
		ruleFunctionBodyEffectFull
		{ after(grammarAccess.getMainFuncAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullArgumentAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getEffectFullArgumentAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullArgument__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEffectFullArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getTypeValueTypeParserRuleCall_0_0()); }
		ruleValueType
		{ after(grammarAccess.getArgumentAccess().getTypeValueTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__ReferenceElementAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getReferenceElementPureFunctionDefinitionCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getReferenceElementPureFunctionDefinitionIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getReferenceElementPureFunctionDefinitionIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getReferenceElementPureFunctionDefinitionCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__FunctionChainAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainCompositionFunctionBodyPureFactorParserRuleCall_0_1_0()); }
		ruleCompositionFunctionBodyPureFactor
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainCompositionFunctionBodyPureFactorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__ReturnFunctionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getReturnFunctionReturnPureFunctionParserRuleCall_0_2_0()); }
		ruleReturnPureFunction
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getReturnFunctionReturnPureFunctionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__PrimitiveElementAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getPrimitiveElementPrimitivePureFunctionParserRuleCall_1_0_0()); }
		rulePrimitivePureFunction
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getPrimitiveElementPrimitivePureFunctionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__FunctionChainAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainCompositionFunctionBodyPureFactorParserRuleCall_1_1_0()); }
		ruleCompositionFunctionBodyPureFactor
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getFunctionChainCompositionFunctionBodyPureFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPure__ReturnFunctionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureAccess().getReturnFunctionReturnPureFunctionParserRuleCall_1_2_0()); }
		ruleReturnPureFunction
		{ after(grammarAccess.getCompositionFunctionBodyPureAccess().getReturnFunctionReturnPureFunctionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__ReferenceElementAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getReferenceElementPureFunctionDefinitionCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getReferenceElementPureFunctionDefinitionIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getReferenceElementPureFunctionDefinitionIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getReferenceElementPureFunctionDefinitionCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyPureFactor__PrimitiveElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getPrimitiveElementPrimitivePureFunctionParserRuleCall_1_1_0()); }
		rulePrimitivePureFunction
		{ after(grammarAccess.getCompositionFunctionBodyPureFactorAccess().getPrimitiveElementPrimitivePureFunctionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__ReferenceElementAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getReferenceElementChainElementCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getReferenceElementChainElementIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getReferenceElementChainElementIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getReferenceElementChainElementCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__FunctionChainAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainCompositionFunctionBodyEffectFullFactorParserRuleCall_0_1_0()); }
		ruleCompositionFunctionBodyEffectFullFactor
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainCompositionFunctionBodyEffectFullFactorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__ReturnFunctionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getReturnFunctionReturnEffectFullFunctionParserRuleCall_0_2_0()); }
		ruleReturnEffectFullFunction
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getReturnFunctionReturnEffectFullFunctionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__PrimitiveElementAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getPrimitiveElementPrimitiveEffectFullFunctionParserRuleCall_1_0_0()); }
		rulePrimitiveEffectFullFunction
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getPrimitiveElementPrimitiveEffectFullFunctionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__FunctionChainAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainCompositionFunctionBodyEffectFullFactorParserRuleCall_1_1_0()); }
		ruleCompositionFunctionBodyEffectFullFactor
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getFunctionChainCompositionFunctionBodyEffectFullFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffect__ReturnFunctionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectAccess().getReturnFunctionReturnEffectFullFunctionParserRuleCall_1_2_0()); }
		ruleReturnEffectFullFunction
		{ after(grammarAccess.getCompositionFunctionBodyEffectAccess().getReturnFunctionReturnEffectFullFunctionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__ReferenceElementAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getReferenceElementChainElementCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getReferenceElementChainElementIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getReferenceElementChainElementIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getReferenceElementChainElementCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionFunctionBodyEffectFullFactor__PrimitiveElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getPrimitiveElementAlternatives_1_1_0()); }
		(rule__CompositionFunctionBodyEffectFullFactor__PrimitiveElementAlternatives_1_1_0)
		{ after(grammarAccess.getCompositionFunctionBodyEffectFullFactorAccess().getPrimitiveElementAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnPureFunction__LambdaFunctionBodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnPureFunctionAccess().getLambdaFunctionBodyPureLambdaParserRuleCall_2_0()); }
		rulePureLambda
		{ after(grammarAccess.getReturnPureFunctionAccess().getLambdaFunctionBodyPureLambdaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnEffectFullFunction__LambdaFunctionBodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnEffectFullFunctionAccess().getLambdaFunctionBodyEffectFullLambdaParserRuleCall_2_0()); }
		ruleEffectFullLambda
		{ after(grammarAccess.getReturnEffectFullFunctionAccess().getLambdaFunctionBodyEffectFullLambdaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IOType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIOTypeAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getIOTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerTypeAccess().getTypeIntKeyword_1_0()); }
		(
			{ before(grammarAccess.getIntegerTypeAccess().getTypeIntKeyword_1_0()); }
			'int'
			{ after(grammarAccess.getIntegerTypeAccess().getTypeIntKeyword_1_0()); }
		)
		{ after(grammarAccess.getIntegerTypeAccess().getTypeIntKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTypeAccess().getTypeStringKeyword_1_0()); }
		(
			{ before(grammarAccess.getStringTypeAccess().getTypeStringKeyword_1_0()); }
			'String'
			{ after(grammarAccess.getStringTypeAccess().getTypeStringKeyword_1_0()); }
		)
		{ after(grammarAccess.getStringTypeAccess().getTypeStringKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTypeAccess().getTypeUnitKeyword_1_0()); }
		(
			{ before(grammarAccess.getUnitTypeAccess().getTypeUnitKeyword_1_0()); }
			'Unit'
			{ after(grammarAccess.getUnitTypeAccess().getTypeUnitKeyword_1_0()); }
		)
		{ after(grammarAccess.getUnitTypeAccess().getTypeUnitKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeDataCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeDataIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataTypeAccess().getTypeDataIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeDataCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__ArgTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionTypeAccess().getArgTypeValueTypeParserRuleCall_3_0()); }
		ruleValueType
		{ after(grammarAccess.getPureFunctionTypeAccess().getArgTypeValueTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureFunctionType__ReturnTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureFunctionTypeAccess().getReturnTypeValueTypeParserRuleCall_5_0()); }
		ruleValueType
		{ after(grammarAccess.getPureFunctionTypeAccess().getReturnTypeValueTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__ArgTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionTypeAccess().getArgTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getEffectFullFunctionTypeAccess().getArgTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullFunctionType__ReturnTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullFunctionTypeAccess().getReturnTypeIOTypeParserRuleCall_5_0()); }
		ruleIOType
		{ after(grammarAccess.getEffectFullFunctionTypeAccess().getReturnTypeIOTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionValueAccess().getValuePureLambdaParserRuleCall_0()); }
		rulePureLambda
		{ after(grammarAccess.getFunctionValueAccess().getValuePureLambdaParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataValueAccess().getTypeDataCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDataValueAccess().getTypeDataIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataValueAccess().getTypeDataIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDataValueAccess().getTypeDataCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataValue__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataValueAccess().getValueAdtValueParserRuleCall_3_0()); }
		ruleAdtValue
		{ after(grammarAccess.getDataValueAccess().getValueAdtValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRefAccess().getValuePureReferenceCrossReference_1_0()); }
		(
			{ before(grammarAccess.getValueRefAccess().getValuePureReferenceIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValueRefAccess().getValuePureReferenceIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getValueRefAccess().getValuePureReferenceCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__ArgAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureLambdaAccess().getArgArgumentParserRuleCall_1_0()); }
		ruleArgument
		{ after(grammarAccess.getPureLambdaAccess().getArgArgumentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PureLambda__FunctionBodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPureLambdaAccess().getFunctionBodyFunctionBodyPureParserRuleCall_4_0()); }
		ruleFunctionBodyPure
		{ after(grammarAccess.getPureLambdaAccess().getFunctionBodyFunctionBodyPureParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__ArgAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullLambdaAccess().getArgEffectFullArgumentParserRuleCall_1_0()); }
		ruleEffectFullArgument
		{ after(grammarAccess.getEffectFullLambdaAccess().getArgEffectFullArgumentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectFullLambda__FunctionBodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectFullLambdaAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_4_0()); }
		ruleFunctionBodyEffectFull
		{ after(grammarAccess.getEffectFullLambdaAccess().getFunctionBodyFunctionBodyEffectFullParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__ProdAdtElement1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdValueAccess().getProdAdtElement1AdtValueParserRuleCall_1_0()); }
		ruleAdtValue
		{ after(grammarAccess.getProdValueAccess().getProdAdtElement1AdtValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdValue__ProdAdtElement2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdValueAccess().getProdAdtElement2AdtValueParserRuleCall_3_0()); }
		ruleAdtValue
		{ after(grammarAccess.getProdValueAccess().getProdAdtElement2AdtValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__SumAdtElement1Assignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumValueAccess().getSumAdtElement1AdtValueParserRuleCall_0_2_0()); }
		ruleAdtValue
		{ after(grammarAccess.getSumValueAccess().getSumAdtElement1AdtValueParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumValue__SumAdtElement2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumValueAccess().getSumAdtElement2AdtValueParserRuleCall_1_2_0()); }
		ruleAdtValue
		{ after(grammarAccess.getSumValueAccess().getSumAdtElement2AdtValueParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplyAccess().getValueValueCrossReference_2_0()); }
		(
			{ before(grammarAccess.getApplyAccess().getValueValueIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getApplyAccess().getValueValueIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getApplyAccess().getValueValueCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
