/**
 * generated by Xtext 2.10.0
 */
package it.unibo.fPML.impl;

import it.unibo.fPML.ChainElement;
import it.unibo.fPML.CompositionFunctionBodyEffect;
import it.unibo.fPML.CompositionFunctionBodyEffectFullFactor;
import it.unibo.fPML.EffectFullFunctionDefinition;
import it.unibo.fPML.FPMLPackage;
import it.unibo.fPML.ReturnEffectFullFunction;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Composition Function Body Effect</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.fPML.impl.CompositionFunctionBodyEffectImpl#getReferenceElement <em>Reference Element</em>}</li>
 *   <li>{@link it.unibo.fPML.impl.CompositionFunctionBodyEffectImpl#getFunctionChain <em>Function Chain</em>}</li>
 *   <li>{@link it.unibo.fPML.impl.CompositionFunctionBodyEffectImpl#getReturnFunction <em>Return Function</em>}</li>
 *   <li>{@link it.unibo.fPML.impl.CompositionFunctionBodyEffectImpl#getPrimitiveElement <em>Primitive Element</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CompositionFunctionBodyEffectImpl extends FunctionBodyEffectFullImpl implements CompositionFunctionBodyEffect
{
  /**
   * The cached value of the '{@link #getReferenceElement() <em>Reference Element</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReferenceElement()
   * @generated
   * @ordered
   */
  protected ChainElement referenceElement;

  /**
   * The cached value of the '{@link #getFunctionChain() <em>Function Chain</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionChain()
   * @generated
   * @ordered
   */
  protected EList<CompositionFunctionBodyEffectFullFactor> functionChain;

  /**
   * The cached value of the '{@link #getReturnFunction() <em>Return Function</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnFunction()
   * @generated
   * @ordered
   */
  protected ReturnEffectFullFunction returnFunction;

  /**
   * The cached value of the '{@link #getPrimitiveElement() <em>Primitive Element</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimitiveElement()
   * @generated
   * @ordered
   */
  protected EffectFullFunctionDefinition primitiveElement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CompositionFunctionBodyEffectImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FPMLPackage.Literals.COMPOSITION_FUNCTION_BODY_EFFECT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChainElement getReferenceElement()
  {
    if (referenceElement != null && referenceElement.eIsProxy())
    {
      InternalEObject oldReferenceElement = (InternalEObject)referenceElement;
      referenceElement = (ChainElement)eResolveProxy(oldReferenceElement);
      if (referenceElement != oldReferenceElement)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__REFERENCE_ELEMENT, oldReferenceElement, referenceElement));
      }
    }
    return referenceElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChainElement basicGetReferenceElement()
  {
    return referenceElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReferenceElement(ChainElement newReferenceElement)
  {
    ChainElement oldReferenceElement = referenceElement;
    referenceElement = newReferenceElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__REFERENCE_ELEMENT, oldReferenceElement, referenceElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<CompositionFunctionBodyEffectFullFactor> getFunctionChain()
  {
    if (functionChain == null)
    {
      functionChain = new EObjectContainmentEList<CompositionFunctionBodyEffectFullFactor>(CompositionFunctionBodyEffectFullFactor.class, this, FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__FUNCTION_CHAIN);
    }
    return functionChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReturnEffectFullFunction getReturnFunction()
  {
    return returnFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReturnFunction(ReturnEffectFullFunction newReturnFunction, NotificationChain msgs)
  {
    ReturnEffectFullFunction oldReturnFunction = returnFunction;
    returnFunction = newReturnFunction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION, oldReturnFunction, newReturnFunction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReturnFunction(ReturnEffectFullFunction newReturnFunction)
  {
    if (newReturnFunction != returnFunction)
    {
      NotificationChain msgs = null;
      if (returnFunction != null)
        msgs = ((InternalEObject)returnFunction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION, null, msgs);
      if (newReturnFunction != null)
        msgs = ((InternalEObject)newReturnFunction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION, null, msgs);
      msgs = basicSetReturnFunction(newReturnFunction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION, newReturnFunction, newReturnFunction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EffectFullFunctionDefinition getPrimitiveElement()
  {
    return primitiveElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimitiveElement(EffectFullFunctionDefinition newPrimitiveElement, NotificationChain msgs)
  {
    EffectFullFunctionDefinition oldPrimitiveElement = primitiveElement;
    primitiveElement = newPrimitiveElement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT, oldPrimitiveElement, newPrimitiveElement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrimitiveElement(EffectFullFunctionDefinition newPrimitiveElement)
  {
    if (newPrimitiveElement != primitiveElement)
    {
      NotificationChain msgs = null;
      if (primitiveElement != null)
        msgs = ((InternalEObject)primitiveElement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT, null, msgs);
      if (newPrimitiveElement != null)
        msgs = ((InternalEObject)newPrimitiveElement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT, null, msgs);
      msgs = basicSetPrimitiveElement(newPrimitiveElement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT, newPrimitiveElement, newPrimitiveElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__FUNCTION_CHAIN:
        return ((InternalEList<?>)getFunctionChain()).basicRemove(otherEnd, msgs);
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION:
        return basicSetReturnFunction(null, msgs);
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT:
        return basicSetPrimitiveElement(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__REFERENCE_ELEMENT:
        if (resolve) return getReferenceElement();
        return basicGetReferenceElement();
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__FUNCTION_CHAIN:
        return getFunctionChain();
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION:
        return getReturnFunction();
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT:
        return getPrimitiveElement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__REFERENCE_ELEMENT:
        setReferenceElement((ChainElement)newValue);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__FUNCTION_CHAIN:
        getFunctionChain().clear();
        getFunctionChain().addAll((Collection<? extends CompositionFunctionBodyEffectFullFactor>)newValue);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION:
        setReturnFunction((ReturnEffectFullFunction)newValue);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT:
        setPrimitiveElement((EffectFullFunctionDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__REFERENCE_ELEMENT:
        setReferenceElement((ChainElement)null);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__FUNCTION_CHAIN:
        getFunctionChain().clear();
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION:
        setReturnFunction((ReturnEffectFullFunction)null);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT:
        setPrimitiveElement((EffectFullFunctionDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__REFERENCE_ELEMENT:
        return referenceElement != null;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__FUNCTION_CHAIN:
        return functionChain != null && !functionChain.isEmpty();
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__RETURN_FUNCTION:
        return returnFunction != null;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_EFFECT__PRIMITIVE_ELEMENT:
        return primitiveElement != null;
    }
    return super.eIsSet(featureID);
  }

} //CompositionFunctionBodyEffectImpl
