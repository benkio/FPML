/**
 * generated by Xtext 2.10.0
 */
package it.unibo.fPML.impl;

import it.unibo.fPML.EffectFullFunction;
import it.unibo.fPML.FPMLPackage;
import it.unibo.fPML.LiftEffectFullFunction;
import it.unibo.fPML.PrimitiveEffectFullFunction;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Lift Effect Full Function</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.fPML.impl.LiftEffectFullFunctionImpl#getFunctionRef <em>Function Ref</em>}</li>
 *   <li>{@link it.unibo.fPML.impl.LiftEffectFullFunctionImpl#getFunctionPrimitive <em>Function Primitive</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LiftEffectFullFunctionImpl extends PrimitiveEffectFullFunctionImpl implements LiftEffectFullFunction
{
  /**
   * The cached value of the '{@link #getFunctionRef() <em>Function Ref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionRef()
   * @generated
   * @ordered
   */
  protected EffectFullFunction functionRef;

  /**
   * The cached value of the '{@link #getFunctionPrimitive() <em>Function Primitive</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionPrimitive()
   * @generated
   * @ordered
   */
  protected PrimitiveEffectFullFunction functionPrimitive;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LiftEffectFullFunctionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FPMLPackage.Literals.LIFT_EFFECT_FULL_FUNCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EffectFullFunction getFunctionRef()
  {
    if (functionRef != null && functionRef.eIsProxy())
    {
      InternalEObject oldFunctionRef = (InternalEObject)functionRef;
      functionRef = (EffectFullFunction)eResolveProxy(oldFunctionRef);
      if (functionRef != oldFunctionRef)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_REF, oldFunctionRef, functionRef));
      }
    }
    return functionRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EffectFullFunction basicGetFunctionRef()
  {
    return functionRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunctionRef(EffectFullFunction newFunctionRef)
  {
    EffectFullFunction oldFunctionRef = functionRef;
    functionRef = newFunctionRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_REF, oldFunctionRef, functionRef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrimitiveEffectFullFunction getFunctionPrimitive()
  {
    return functionPrimitive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunctionPrimitive(PrimitiveEffectFullFunction newFunctionPrimitive, NotificationChain msgs)
  {
    PrimitiveEffectFullFunction oldFunctionPrimitive = functionPrimitive;
    functionPrimitive = newFunctionPrimitive;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE, oldFunctionPrimitive, newFunctionPrimitive);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunctionPrimitive(PrimitiveEffectFullFunction newFunctionPrimitive)
  {
    if (newFunctionPrimitive != functionPrimitive)
    {
      NotificationChain msgs = null;
      if (functionPrimitive != null)
        msgs = ((InternalEObject)functionPrimitive).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE, null, msgs);
      if (newFunctionPrimitive != null)
        msgs = ((InternalEObject)newFunctionPrimitive).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE, null, msgs);
      msgs = basicSetFunctionPrimitive(newFunctionPrimitive, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE, newFunctionPrimitive, newFunctionPrimitive));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE:
        return basicSetFunctionPrimitive(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_REF:
        if (resolve) return getFunctionRef();
        return basicGetFunctionRef();
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE:
        return getFunctionPrimitive();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_REF:
        setFunctionRef((EffectFullFunction)newValue);
        return;
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE:
        setFunctionPrimitive((PrimitiveEffectFullFunction)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_REF:
        setFunctionRef((EffectFullFunction)null);
        return;
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE:
        setFunctionPrimitive((PrimitiveEffectFullFunction)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_REF:
        return functionRef != null;
      case FPMLPackage.LIFT_EFFECT_FULL_FUNCTION__FUNCTION_PRIMITIVE:
        return functionPrimitive != null;
    }
    return super.eIsSet(featureID);
  }

} //LiftEffectFullFunctionImpl
