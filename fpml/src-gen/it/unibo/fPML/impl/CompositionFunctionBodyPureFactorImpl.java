/**
 * generated by Xtext 2.10.0
 */
package it.unibo.fPML.impl;

import it.unibo.fPML.CompositionFunctionBodyPureFactor;
import it.unibo.fPML.Expression;
import it.unibo.fPML.FPMLPackage;
import it.unibo.fPML.PrimitivePureFunction;
import it.unibo.fPML.PureFunction;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Composition Function Body Pure Factor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.fPML.impl.CompositionFunctionBodyPureFactorImpl#getReferenceElement <em>Reference Element</em>}</li>
 *   <li>{@link it.unibo.fPML.impl.CompositionFunctionBodyPureFactorImpl#getPrimitiveElement <em>Primitive Element</em>}</li>
 *   <li>{@link it.unibo.fPML.impl.CompositionFunctionBodyPureFactorImpl#getExpressionElement <em>Expression Element</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CompositionFunctionBodyPureFactorImpl extends MinimalEObjectImpl.Container implements CompositionFunctionBodyPureFactor
{
  /**
   * The cached value of the '{@link #getReferenceElement() <em>Reference Element</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReferenceElement()
   * @generated
   * @ordered
   */
  protected PureFunction referenceElement;

  /**
   * The cached value of the '{@link #getPrimitiveElement() <em>Primitive Element</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimitiveElement()
   * @generated
   * @ordered
   */
  protected PrimitivePureFunction primitiveElement;

  /**
   * The cached value of the '{@link #getExpressionElement() <em>Expression Element</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressionElement()
   * @generated
   * @ordered
   */
  protected Expression expressionElement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CompositionFunctionBodyPureFactorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FPMLPackage.Literals.COMPOSITION_FUNCTION_BODY_PURE_FACTOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PureFunction getReferenceElement()
  {
    if (referenceElement != null && referenceElement.eIsProxy())
    {
      InternalEObject oldReferenceElement = (InternalEObject)referenceElement;
      referenceElement = (PureFunction)eResolveProxy(oldReferenceElement);
      if (referenceElement != oldReferenceElement)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__REFERENCE_ELEMENT, oldReferenceElement, referenceElement));
      }
    }
    return referenceElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PureFunction basicGetReferenceElement()
  {
    return referenceElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReferenceElement(PureFunction newReferenceElement)
  {
    PureFunction oldReferenceElement = referenceElement;
    referenceElement = newReferenceElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__REFERENCE_ELEMENT, oldReferenceElement, referenceElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrimitivePureFunction getPrimitiveElement()
  {
    return primitiveElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimitiveElement(PrimitivePureFunction newPrimitiveElement, NotificationChain msgs)
  {
    PrimitivePureFunction oldPrimitiveElement = primitiveElement;
    primitiveElement = newPrimitiveElement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT, oldPrimitiveElement, newPrimitiveElement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrimitiveElement(PrimitivePureFunction newPrimitiveElement)
  {
    if (newPrimitiveElement != primitiveElement)
    {
      NotificationChain msgs = null;
      if (primitiveElement != null)
        msgs = ((InternalEObject)primitiveElement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT, null, msgs);
      if (newPrimitiveElement != null)
        msgs = ((InternalEObject)newPrimitiveElement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT, null, msgs);
      msgs = basicSetPrimitiveElement(newPrimitiveElement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT, newPrimitiveElement, newPrimitiveElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getExpressionElement()
  {
    return expressionElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpressionElement(Expression newExpressionElement, NotificationChain msgs)
  {
    Expression oldExpressionElement = expressionElement;
    expressionElement = newExpressionElement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT, oldExpressionElement, newExpressionElement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpressionElement(Expression newExpressionElement)
  {
    if (newExpressionElement != expressionElement)
    {
      NotificationChain msgs = null;
      if (expressionElement != null)
        msgs = ((InternalEObject)expressionElement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT, null, msgs);
      if (newExpressionElement != null)
        msgs = ((InternalEObject)newExpressionElement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT, null, msgs);
      msgs = basicSetExpressionElement(newExpressionElement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT, newExpressionElement, newExpressionElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT:
        return basicSetPrimitiveElement(null, msgs);
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT:
        return basicSetExpressionElement(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__REFERENCE_ELEMENT:
        if (resolve) return getReferenceElement();
        return basicGetReferenceElement();
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT:
        return getPrimitiveElement();
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT:
        return getExpressionElement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__REFERENCE_ELEMENT:
        setReferenceElement((PureFunction)newValue);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT:
        setPrimitiveElement((PrimitivePureFunction)newValue);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT:
        setExpressionElement((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__REFERENCE_ELEMENT:
        setReferenceElement((PureFunction)null);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT:
        setPrimitiveElement((PrimitivePureFunction)null);
        return;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT:
        setExpressionElement((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__REFERENCE_ELEMENT:
        return referenceElement != null;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__PRIMITIVE_ELEMENT:
        return primitiveElement != null;
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE_FACTOR__EXPRESSION_ELEMENT:
        return expressionElement != null;
    }
    return super.eIsSet(featureID);
  }

} //CompositionFunctionBodyPureFactorImpl
