/**
 * generated by Xtext 2.10.0
 */
package it.unibo.fPML.impl;

import it.unibo.fPML.EffectFullFunction;
import it.unibo.fPML.FPMLPackage;
import it.unibo.fPML.IOEffectFullFunction;
import it.unibo.fPML.PrimitiveEffectFullFunction;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>IO Effect Full Function</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.fPML.impl.IOEffectFullFunctionImpl#getEffectFullFunction <em>Effect Full Function</em>}</li>
 *   <li>{@link it.unibo.fPML.impl.IOEffectFullFunctionImpl#getEffectFullPrimitive <em>Effect Full Primitive</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IOEffectFullFunctionImpl extends EffectFullExpressionImpl implements IOEffectFullFunction
{
  /**
   * The cached value of the '{@link #getEffectFullFunction() <em>Effect Full Function</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEffectFullFunction()
   * @generated
   * @ordered
   */
  protected EffectFullFunction effectFullFunction;

  /**
   * The cached value of the '{@link #getEffectFullPrimitive() <em>Effect Full Primitive</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEffectFullPrimitive()
   * @generated
   * @ordered
   */
  protected PrimitiveEffectFullFunction effectFullPrimitive;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IOEffectFullFunctionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FPMLPackage.Literals.IO_EFFECT_FULL_FUNCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EffectFullFunction getEffectFullFunction()
  {
    if (effectFullFunction != null && effectFullFunction.eIsProxy())
    {
      InternalEObject oldEffectFullFunction = (InternalEObject)effectFullFunction;
      effectFullFunction = (EffectFullFunction)eResolveProxy(oldEffectFullFunction);
      if (effectFullFunction != oldEffectFullFunction)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_FUNCTION, oldEffectFullFunction, effectFullFunction));
      }
    }
    return effectFullFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EffectFullFunction basicGetEffectFullFunction()
  {
    return effectFullFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEffectFullFunction(EffectFullFunction newEffectFullFunction)
  {
    EffectFullFunction oldEffectFullFunction = effectFullFunction;
    effectFullFunction = newEffectFullFunction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_FUNCTION, oldEffectFullFunction, effectFullFunction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrimitiveEffectFullFunction getEffectFullPrimitive()
  {
    return effectFullPrimitive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEffectFullPrimitive(PrimitiveEffectFullFunction newEffectFullPrimitive, NotificationChain msgs)
  {
    PrimitiveEffectFullFunction oldEffectFullPrimitive = effectFullPrimitive;
    effectFullPrimitive = newEffectFullPrimitive;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE, oldEffectFullPrimitive, newEffectFullPrimitive);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEffectFullPrimitive(PrimitiveEffectFullFunction newEffectFullPrimitive)
  {
    if (newEffectFullPrimitive != effectFullPrimitive)
    {
      NotificationChain msgs = null;
      if (effectFullPrimitive != null)
        msgs = ((InternalEObject)effectFullPrimitive).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE, null, msgs);
      if (newEffectFullPrimitive != null)
        msgs = ((InternalEObject)newEffectFullPrimitive).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE, null, msgs);
      msgs = basicSetEffectFullPrimitive(newEffectFullPrimitive, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE, newEffectFullPrimitive, newEffectFullPrimitive));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE:
        return basicSetEffectFullPrimitive(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_FUNCTION:
        if (resolve) return getEffectFullFunction();
        return basicGetEffectFullFunction();
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE:
        return getEffectFullPrimitive();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_FUNCTION:
        setEffectFullFunction((EffectFullFunction)newValue);
        return;
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE:
        setEffectFullPrimitive((PrimitiveEffectFullFunction)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_FUNCTION:
        setEffectFullFunction((EffectFullFunction)null);
        return;
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE:
        setEffectFullPrimitive((PrimitiveEffectFullFunction)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_FUNCTION:
        return effectFullFunction != null;
      case FPMLPackage.IO_EFFECT_FULL_FUNCTION__EFFECT_FULL_PRIMITIVE:
        return effectFullPrimitive != null;
    }
    return super.eIsSet(featureID);
  }

} //IOEffectFullFunctionImpl
