/**
 * generated by Xtext 2.10.0
 */
package it.unibo.fPML.impl;

import it.unibo.fPML.CompositionFunctionBodyPure;
import it.unibo.fPML.FPMLPackage;
import it.unibo.fPML.InitialPureChainElement;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Composition Function Body Pure</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.fPML.impl.CompositionFunctionBodyPureImpl#getFunctionChain <em>Function Chain</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CompositionFunctionBodyPureImpl extends FunctionBodyPureImpl implements CompositionFunctionBodyPure
{
  /**
   * The cached value of the '{@link #getFunctionChain() <em>Function Chain</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionChain()
   * @generated
   * @ordered
   */
  protected EList<InitialPureChainElement> functionChain;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CompositionFunctionBodyPureImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FPMLPackage.Literals.COMPOSITION_FUNCTION_BODY_PURE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<InitialPureChainElement> getFunctionChain()
  {
    if (functionChain == null)
    {
      functionChain = new EObjectResolvingEList<InitialPureChainElement>(InitialPureChainElement.class, this, FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE__FUNCTION_CHAIN);
    }
    return functionChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE__FUNCTION_CHAIN:
        return getFunctionChain();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE__FUNCTION_CHAIN:
        getFunctionChain().clear();
        getFunctionChain().addAll((Collection<? extends InitialPureChainElement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE__FUNCTION_CHAIN:
        getFunctionChain().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FPMLPackage.COMPOSITION_FUNCTION_BODY_PURE__FUNCTION_CHAIN:
        return functionChain != null && !functionChain.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //CompositionFunctionBodyPureImpl
