/*
 * generated by Xtext 2.9.2
 */
package it.unibo.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import it.unibo.fPML.PureFunctionBlock
import it.unibo.fPML.Data
import it.unibo.fPML.EffectFullBlock
import it.unibo.generator.PureFunctionGenerator
import it.unibo.fPML.Value

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class FPMLGenerator extends AbstractGenerator {

	val basePackage = "it/unibo/";
	val static basePackageJava = "it.unibo."
	val pureFunctionGenerator = new PureFunctionGenerator
	val effectFullFunctionGenerator = new EffectFullFunctionGenerator
	val dataGenerator = new DataGenerator
	val valueGenerator = new ValueGenerator
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile(basePackage + "Pure/PureFunctions.java", pureFunctionGenerator.compile(resource.getAllContents.filter(PureFunctionBlock).head));
		fsa.generateFile(basePackage + "Effectfull/EffectFullFunctions.java", effectFullFunctionGenerator.compile(resource.getAllContents.filter(EffectFullBlock).head));
		for(e : resource.getAllContents.toIterable.filter(Data)){
			fsa.generateFile(
					basePackage + "Pure/Data/" + e.getName() + ".java",
					dataGenerator.compile(e)
			);
		}
		fsa.generateFile(
			basePackage + "Pure/Data/Value.java",
			valueGenerator.compile(resource.getAllContents.toIterable.filter(Value))
		)	
	}
	
	def static getBasePackageJava() {
		return basePackageJava
	}
}