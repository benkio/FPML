/*
 * generated by Xtext 2.9.2
 */
package it.unibo.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import it.unibo.fPML.PureFunctionBlock
import it.unibo.generator.PureFunctionGenerator
import it.unibo.fPML.MainFunc
import it.unibo.fPML.PureData
import it.unibo.fPML.PureValue
import it.unibo.fPML.EffectFullFunctionBlock
import it.unibo.fPML.EffectFullData
import it.unibo.fPML.EffectFullValue

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class FPMLGenerator extends AbstractGenerator {

	def static String basePackageJava() { return "it.unibo." }
	val basePackage = "it/unibo/";
	val pureFunctionGenerator = new PureFunctionGenerator
	val effectFullFunctionGenerator = new EffectFullFunctionGenerator
	val dataGenerator = new DataGenerator
	val valueGenerator = new ValueGenerator
	val primitiveGenerator = new PrimitiveGenerator
	val effectFullDataGenerator = new EffectFullDataGenerator
	val effectFullValueGenerator = new EffectFullValueGenerator
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile(basePackage + "Pure/PureFunctionDefinitions.java", pureFunctionGenerator.compile(resource.getAllContents.filter(PureFunctionBlock).head));
		fsa.generateFile(basePackage + "Effectfull/EffectFullFunctionDefinitions.java", effectFullFunctionGenerator.compile(resource.getAllContents.filter(EffectFullFunctionBlock).head));
		for(e : resource.getAllContents.toIterable.filter(PureData)){
			fsa.generateFile(
					basePackage + "Pure/Data/" + e.getName() + ".java",
					dataGenerator.compile(e)
			);
		}
		fsa.generateFile(
			basePackage + "Pure/Data/PureValue.java",
			valueGenerator.compile(resource.getAllContents.toIterable.filter(PureValue))
		)
		
		for(e : resource.getAllContents.toIterable.filter(EffectFullData)){
			fsa.generateFile(
					basePackage + "Effectfull/Data/" + e.name + ".java",
					effectFullDataGenerator.compile(e)
			);
		}
		fsa.generateFile(
			basePackage + "Effectfull/Data/EffectFullValue.java",
			effectFullValueGenerator.compile(resource.getAllContents.toIterable.filter(EffectFullValue))
		)
		
		fsa.generateFile(
			basePackage + "Pure/Primitives.java",
			primitiveGenerator.compilePure()
		)
		fsa.generateFile(
			basePackage + "Effectfull/PrimitivesEffectFull.java",
			primitiveGenerator.compileEffectFull()
		)
		
		fsa.generateFile(basePackage + "Effectfull/EntryPoint.java", effectFullFunctionGenerator.compile(resource.getAllContents.toIterable.filter(MainFunc).head))
	}
}